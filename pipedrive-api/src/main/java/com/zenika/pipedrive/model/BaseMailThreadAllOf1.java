/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zenika.pipedrive.model.BaseMailThreadAllOf1Parties;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BaseMailThreadAllOf1
 */
@JsonPropertyOrder({
  BaseMailThreadAllOf1.JSON_PROPERTY_PARTIES,
  BaseMailThreadAllOf1.JSON_PROPERTY_DRAFTS_PARTIES,
  BaseMailThreadAllOf1.JSON_PROPERTY_FOLDERS,
  BaseMailThreadAllOf1.JSON_PROPERTY_VERSION,
  BaseMailThreadAllOf1.JSON_PROPERTY_SNIPPET_DRAFT,
  BaseMailThreadAllOf1.JSON_PROPERTY_SNIPPET_SENT,
  BaseMailThreadAllOf1.JSON_PROPERTY_MESSAGE_COUNT,
  BaseMailThreadAllOf1.JSON_PROPERTY_HAS_DRAFT_FLAG,
  BaseMailThreadAllOf1.JSON_PROPERTY_HAS_SENT_FLAG,
  BaseMailThreadAllOf1.JSON_PROPERTY_ARCHIVED_FLAG,
  BaseMailThreadAllOf1.JSON_PROPERTY_SHARED_FLAG,
  BaseMailThreadAllOf1.JSON_PROPERTY_EXTERNAL_DELETED_FLAG,
  BaseMailThreadAllOf1.JSON_PROPERTY_FIRST_MESSAGE_TO_ME_FLAG,
  BaseMailThreadAllOf1.JSON_PROPERTY_LAST_MESSAGE_TIMESTAMP,
  BaseMailThreadAllOf1.JSON_PROPERTY_FIRST_MESSAGE_TIMESTAMP,
  BaseMailThreadAllOf1.JSON_PROPERTY_LAST_MESSAGE_SENT_TIMESTAMP,
  BaseMailThreadAllOf1.JSON_PROPERTY_LAST_MESSAGE_RECEIVED_TIMESTAMP,
  BaseMailThreadAllOf1.JSON_PROPERTY_ADD_TIME,
  BaseMailThreadAllOf1.JSON_PROPERTY_UPDATE_TIME,
  BaseMailThreadAllOf1.JSON_PROPERTY_DEAL_ID,
  BaseMailThreadAllOf1.JSON_PROPERTY_DEAL_STATUS,
  BaseMailThreadAllOf1.JSON_PROPERTY_LEAD_ID,
  BaseMailThreadAllOf1.JSON_PROPERTY_ALL_MESSAGES_SENT_FLAG
})
@JsonTypeName("baseMailThread_allOf_1")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class BaseMailThreadAllOf1 {
  public static final String JSON_PROPERTY_PARTIES = "parties";
  private BaseMailThreadAllOf1Parties parties;

  public static final String JSON_PROPERTY_DRAFTS_PARTIES = "drafts_parties";
  private List<Object> draftsParties = null;

  public static final String JSON_PROPERTY_FOLDERS = "folders";
  private List<String> folders = null;

  public static final String JSON_PROPERTY_VERSION = "version";
  private BigDecimal version;

  public static final String JSON_PROPERTY_SNIPPET_DRAFT = "snippet_draft";
  private JsonNullable<String> snippetDraft = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SNIPPET_SENT = "snippet_sent";
  private String snippetSent;

  public static final String JSON_PROPERTY_MESSAGE_COUNT = "message_count";
  private Integer messageCount;

  /**
   * Gets or Sets hasDraftFlag
   */
  public enum HasDraftFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    HasDraftFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HasDraftFlagEnum fromValue(BigDecimal value) {
      for (HasDraftFlagEnum b : HasDraftFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_HAS_DRAFT_FLAG = "has_draft_flag";
  private HasDraftFlagEnum hasDraftFlag = HasDraftFlagEnum.NUMBER_0;

  /**
   * Gets or Sets hasSentFlag
   */
  public enum HasSentFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    HasSentFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HasSentFlagEnum fromValue(BigDecimal value) {
      for (HasSentFlagEnum b : HasSentFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_HAS_SENT_FLAG = "has_sent_flag";
  private HasSentFlagEnum hasSentFlag = HasSentFlagEnum.NUMBER_0;

  /**
   * Gets or Sets archivedFlag
   */
  public enum ArchivedFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    ArchivedFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ArchivedFlagEnum fromValue(BigDecimal value) {
      for (ArchivedFlagEnum b : ArchivedFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ARCHIVED_FLAG = "archived_flag";
  private ArchivedFlagEnum archivedFlag = ArchivedFlagEnum.NUMBER_0;

  /**
   * Gets or Sets sharedFlag
   */
  public enum SharedFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    SharedFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SharedFlagEnum fromValue(BigDecimal value) {
      for (SharedFlagEnum b : SharedFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SHARED_FLAG = "shared_flag";
  private SharedFlagEnum sharedFlag = SharedFlagEnum.NUMBER_0;

  /**
   * Gets or Sets externalDeletedFlag
   */
  public enum ExternalDeletedFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    ExternalDeletedFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExternalDeletedFlagEnum fromValue(BigDecimal value) {
      for (ExternalDeletedFlagEnum b : ExternalDeletedFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EXTERNAL_DELETED_FLAG = "external_deleted_flag";
  private ExternalDeletedFlagEnum externalDeletedFlag = ExternalDeletedFlagEnum.NUMBER_0;

  /**
   * Gets or Sets firstMessageToMeFlag
   */
  public enum FirstMessageToMeFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    FirstMessageToMeFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FirstMessageToMeFlagEnum fromValue(BigDecimal value) {
      for (FirstMessageToMeFlagEnum b : FirstMessageToMeFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FIRST_MESSAGE_TO_ME_FLAG = "first_message_to_me_flag";
  private FirstMessageToMeFlagEnum firstMessageToMeFlag = FirstMessageToMeFlagEnum.NUMBER_0;

  public static final String JSON_PROPERTY_LAST_MESSAGE_TIMESTAMP = "last_message_timestamp";
  private OffsetDateTime lastMessageTimestamp;

  public static final String JSON_PROPERTY_FIRST_MESSAGE_TIMESTAMP = "first_message_timestamp";
  private OffsetDateTime firstMessageTimestamp;

  public static final String JSON_PROPERTY_LAST_MESSAGE_SENT_TIMESTAMP = "last_message_sent_timestamp";
  private JsonNullable<OffsetDateTime> lastMessageSentTimestamp = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_LAST_MESSAGE_RECEIVED_TIMESTAMP = "last_message_received_timestamp";
  private OffsetDateTime lastMessageReceivedTimestamp;

  public static final String JSON_PROPERTY_ADD_TIME = "add_time";
  private OffsetDateTime addTime;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  private OffsetDateTime updateTime;

  public static final String JSON_PROPERTY_DEAL_ID = "deal_id";
  private JsonNullable<Integer> dealId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_DEAL_STATUS = "deal_status";
  private JsonNullable<String> dealStatus = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LEAD_ID = "lead_id";
  private JsonNullable<UUID> leadId = JsonNullable.<UUID>undefined();

  /**
   * Gets or Sets allMessagesSentFlag
   */
  public enum AllMessagesSentFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    AllMessagesSentFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AllMessagesSentFlagEnum fromValue(BigDecimal value) {
      for (AllMessagesSentFlagEnum b : AllMessagesSentFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ALL_MESSAGES_SENT_FLAG = "all_messages_sent_flag";
  private AllMessagesSentFlagEnum allMessagesSentFlag = AllMessagesSentFlagEnum.NUMBER_0;

  public BaseMailThreadAllOf1() {
  }

  public BaseMailThreadAllOf1 parties(BaseMailThreadAllOf1Parties parties) {
    
    this.parties = parties;
    return this;
  }

   /**
   * Get parties
   * @return parties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BaseMailThreadAllOf1Parties getParties() {
    return parties;
  }


  @JsonProperty(JSON_PROPERTY_PARTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParties(BaseMailThreadAllOf1Parties parties) {
    this.parties = parties;
  }


  public BaseMailThreadAllOf1 draftsParties(List<Object> draftsParties) {
    
    this.draftsParties = draftsParties;
    return this;
  }

  public BaseMailThreadAllOf1 addDraftsPartiesItem(Object draftsPartiesItem) {
    if (this.draftsParties == null) {
      this.draftsParties = new ArrayList<>();
    }
    this.draftsParties.add(draftsPartiesItem);
    return this;
  }

   /**
   * Parties of the drafted mail thread
   * @return draftsParties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parties of the drafted mail thread")
  @JsonProperty(JSON_PROPERTY_DRAFTS_PARTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getDraftsParties() {
    return draftsParties;
  }


  @JsonProperty(JSON_PROPERTY_DRAFTS_PARTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDraftsParties(List<Object> draftsParties) {
    this.draftsParties = draftsParties;
  }


  public BaseMailThreadAllOf1 folders(List<String> folders) {
    
    this.folders = folders;
    return this;
  }

  public BaseMailThreadAllOf1 addFoldersItem(String foldersItem) {
    if (this.folders == null) {
      this.folders = new ArrayList<>();
    }
    this.folders.add(foldersItem);
    return this;
  }

   /**
   * Folders in which messages from thread are being stored
   * @return folders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Folders in which messages from thread are being stored")
  @JsonProperty(JSON_PROPERTY_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFolders() {
    return folders;
  }


  @JsonProperty(JSON_PROPERTY_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFolders(List<String> folders) {
    this.folders = folders;
  }


  public BaseMailThreadAllOf1 version(BigDecimal version) {
    
    this.version = version;
    return this;
  }

   /**
   * Version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Version")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(BigDecimal version) {
    this.version = version;
  }


  public BaseMailThreadAllOf1 snippetDraft(String snippetDraft) {
    this.snippetDraft = JsonNullable.<String>of(snippetDraft);
    
    return this;
  }

   /**
   * A snippet from a draft
   * @return snippetDraft
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A snippet from a draft")
  @JsonIgnore

  public String getSnippetDraft() {
        return snippetDraft.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SNIPPET_DRAFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSnippetDraft_JsonNullable() {
    return snippetDraft;
  }
  
  @JsonProperty(JSON_PROPERTY_SNIPPET_DRAFT)
  public void setSnippetDraft_JsonNullable(JsonNullable<String> snippetDraft) {
    this.snippetDraft = snippetDraft;
  }

  public void setSnippetDraft(String snippetDraft) {
    this.snippetDraft = JsonNullable.<String>of(snippetDraft);
  }


  public BaseMailThreadAllOf1 snippetSent(String snippetSent) {
    
    this.snippetSent = snippetSent;
    return this;
  }

   /**
   * A snippet from a message sent
   * @return snippetSent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A snippet from a message sent")
  @JsonProperty(JSON_PROPERTY_SNIPPET_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSnippetSent() {
    return snippetSent;
  }


  @JsonProperty(JSON_PROPERTY_SNIPPET_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSnippetSent(String snippetSent) {
    this.snippetSent = snippetSent;
  }


  public BaseMailThreadAllOf1 messageCount(Integer messageCount) {
    
    this.messageCount = messageCount;
    return this;
  }

   /**
   * An amount of messages
   * @return messageCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An amount of messages")
  @JsonProperty(JSON_PROPERTY_MESSAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMessageCount() {
    return messageCount;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageCount(Integer messageCount) {
    this.messageCount = messageCount;
  }


  public BaseMailThreadAllOf1 hasDraftFlag(HasDraftFlagEnum hasDraftFlag) {
    
    this.hasDraftFlag = hasDraftFlag;
    return this;
  }

   /**
   * Get hasDraftFlag
   * @return hasDraftFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HAS_DRAFT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HasDraftFlagEnum getHasDraftFlag() {
    return hasDraftFlag;
  }


  @JsonProperty(JSON_PROPERTY_HAS_DRAFT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasDraftFlag(HasDraftFlagEnum hasDraftFlag) {
    this.hasDraftFlag = hasDraftFlag;
  }


  public BaseMailThreadAllOf1 hasSentFlag(HasSentFlagEnum hasSentFlag) {
    
    this.hasSentFlag = hasSentFlag;
    return this;
  }

   /**
   * Get hasSentFlag
   * @return hasSentFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HAS_SENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HasSentFlagEnum getHasSentFlag() {
    return hasSentFlag;
  }


  @JsonProperty(JSON_PROPERTY_HAS_SENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasSentFlag(HasSentFlagEnum hasSentFlag) {
    this.hasSentFlag = hasSentFlag;
  }


  public BaseMailThreadAllOf1 archivedFlag(ArchivedFlagEnum archivedFlag) {
    
    this.archivedFlag = archivedFlag;
    return this;
  }

   /**
   * Get archivedFlag
   * @return archivedFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ARCHIVED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ArchivedFlagEnum getArchivedFlag() {
    return archivedFlag;
  }


  @JsonProperty(JSON_PROPERTY_ARCHIVED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArchivedFlag(ArchivedFlagEnum archivedFlag) {
    this.archivedFlag = archivedFlag;
  }


  public BaseMailThreadAllOf1 sharedFlag(SharedFlagEnum sharedFlag) {
    
    this.sharedFlag = sharedFlag;
    return this;
  }

   /**
   * Get sharedFlag
   * @return sharedFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SHARED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SharedFlagEnum getSharedFlag() {
    return sharedFlag;
  }


  @JsonProperty(JSON_PROPERTY_SHARED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharedFlag(SharedFlagEnum sharedFlag) {
    this.sharedFlag = sharedFlag;
  }


  public BaseMailThreadAllOf1 externalDeletedFlag(ExternalDeletedFlagEnum externalDeletedFlag) {
    
    this.externalDeletedFlag = externalDeletedFlag;
    return this;
  }

   /**
   * Get externalDeletedFlag
   * @return externalDeletedFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_DELETED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExternalDeletedFlagEnum getExternalDeletedFlag() {
    return externalDeletedFlag;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_DELETED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalDeletedFlag(ExternalDeletedFlagEnum externalDeletedFlag) {
    this.externalDeletedFlag = externalDeletedFlag;
  }


  public BaseMailThreadAllOf1 firstMessageToMeFlag(FirstMessageToMeFlagEnum firstMessageToMeFlag) {
    
    this.firstMessageToMeFlag = firstMessageToMeFlag;
    return this;
  }

   /**
   * Get firstMessageToMeFlag
   * @return firstMessageToMeFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FIRST_MESSAGE_TO_ME_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FirstMessageToMeFlagEnum getFirstMessageToMeFlag() {
    return firstMessageToMeFlag;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_MESSAGE_TO_ME_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstMessageToMeFlag(FirstMessageToMeFlagEnum firstMessageToMeFlag) {
    this.firstMessageToMeFlag = firstMessageToMeFlag;
  }


  public BaseMailThreadAllOf1 lastMessageTimestamp(OffsetDateTime lastMessageTimestamp) {
    
    this.lastMessageTimestamp = lastMessageTimestamp;
    return this;
  }

   /**
   * Last message timestamp
   * @return lastMessageTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last message timestamp")
  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastMessageTimestamp() {
    return lastMessageTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastMessageTimestamp(OffsetDateTime lastMessageTimestamp) {
    this.lastMessageTimestamp = lastMessageTimestamp;
  }


  public BaseMailThreadAllOf1 firstMessageTimestamp(OffsetDateTime firstMessageTimestamp) {
    
    this.firstMessageTimestamp = firstMessageTimestamp;
    return this;
  }

   /**
   * The time when the mail thread has had the first message received or created
   * @return firstMessageTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time when the mail thread has had the first message received or created")
  @JsonProperty(JSON_PROPERTY_FIRST_MESSAGE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFirstMessageTimestamp() {
    return firstMessageTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_MESSAGE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstMessageTimestamp(OffsetDateTime firstMessageTimestamp) {
    this.firstMessageTimestamp = firstMessageTimestamp;
  }


  public BaseMailThreadAllOf1 lastMessageSentTimestamp(OffsetDateTime lastMessageSentTimestamp) {
    this.lastMessageSentTimestamp = JsonNullable.<OffsetDateTime>of(lastMessageSentTimestamp);
    
    return this;
  }

   /**
   * The last time when the mail thread has had a message sent
   * @return lastMessageSentTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The last time when the mail thread has had a message sent")
  @JsonIgnore

  public OffsetDateTime getLastMessageSentTimestamp() {
        return lastMessageSentTimestamp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_SENT_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getLastMessageSentTimestamp_JsonNullable() {
    return lastMessageSentTimestamp;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_SENT_TIMESTAMP)
  public void setLastMessageSentTimestamp_JsonNullable(JsonNullable<OffsetDateTime> lastMessageSentTimestamp) {
    this.lastMessageSentTimestamp = lastMessageSentTimestamp;
  }

  public void setLastMessageSentTimestamp(OffsetDateTime lastMessageSentTimestamp) {
    this.lastMessageSentTimestamp = JsonNullable.<OffsetDateTime>of(lastMessageSentTimestamp);
  }


  public BaseMailThreadAllOf1 lastMessageReceivedTimestamp(OffsetDateTime lastMessageReceivedTimestamp) {
    
    this.lastMessageReceivedTimestamp = lastMessageReceivedTimestamp;
    return this;
  }

   /**
   * The last time when the mail thread has had a message received
   * @return lastMessageReceivedTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The last time when the mail thread has had a message received")
  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_RECEIVED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastMessageReceivedTimestamp() {
    return lastMessageReceivedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_RECEIVED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastMessageReceivedTimestamp(OffsetDateTime lastMessageReceivedTimestamp) {
    this.lastMessageReceivedTimestamp = lastMessageReceivedTimestamp;
  }


  public BaseMailThreadAllOf1 addTime(OffsetDateTime addTime) {
    
    this.addTime = addTime;
    return this;
  }

   /**
   * The time when the mail thread was inserted to database
   * @return addTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time when the mail thread was inserted to database")
  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getAddTime() {
    return addTime;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddTime(OffsetDateTime addTime) {
    this.addTime = addTime;
  }


  public BaseMailThreadAllOf1 updateTime(OffsetDateTime updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * The time when the mail thread was updated in database received
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time when the mail thread was updated in database received")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
  }


  public BaseMailThreadAllOf1 dealId(Integer dealId) {
    this.dealId = JsonNullable.<Integer>of(dealId);
    
    return this;
  }

   /**
   * The ID of the deal
   * @return dealId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the deal")
  @JsonIgnore

  public Integer getDealId() {
        return dealId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getDealId_JsonNullable() {
    return dealId;
  }
  
  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  public void setDealId_JsonNullable(JsonNullable<Integer> dealId) {
    this.dealId = dealId;
  }

  public void setDealId(Integer dealId) {
    this.dealId = JsonNullable.<Integer>of(dealId);
  }


  public BaseMailThreadAllOf1 dealStatus(String dealStatus) {
    this.dealStatus = JsonNullable.<String>of(dealStatus);
    
    return this;
  }

   /**
   * Status of the deal
   * @return dealStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status of the deal")
  @JsonIgnore

  public String getDealStatus() {
        return dealStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEAL_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDealStatus_JsonNullable() {
    return dealStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_DEAL_STATUS)
  public void setDealStatus_JsonNullable(JsonNullable<String> dealStatus) {
    this.dealStatus = dealStatus;
  }

  public void setDealStatus(String dealStatus) {
    this.dealStatus = JsonNullable.<String>of(dealStatus);
  }


  public BaseMailThreadAllOf1 leadId(UUID leadId) {
    this.leadId = JsonNullable.<UUID>of(leadId);
    
    return this;
  }

   /**
   * The ID of the lead
   * @return leadId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the lead")
  @JsonIgnore

  public UUID getLeadId() {
        return leadId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LEAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getLeadId_JsonNullable() {
    return leadId;
  }
  
  @JsonProperty(JSON_PROPERTY_LEAD_ID)
  public void setLeadId_JsonNullable(JsonNullable<UUID> leadId) {
    this.leadId = leadId;
  }

  public void setLeadId(UUID leadId) {
    this.leadId = JsonNullable.<UUID>of(leadId);
  }


  public BaseMailThreadAllOf1 allMessagesSentFlag(AllMessagesSentFlagEnum allMessagesSentFlag) {
    
    this.allMessagesSentFlag = allMessagesSentFlag;
    return this;
  }

   /**
   * Get allMessagesSentFlag
   * @return allMessagesSentFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ALL_MESSAGES_SENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AllMessagesSentFlagEnum getAllMessagesSentFlag() {
    return allMessagesSentFlag;
  }


  @JsonProperty(JSON_PROPERTY_ALL_MESSAGES_SENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllMessagesSentFlag(AllMessagesSentFlagEnum allMessagesSentFlag) {
    this.allMessagesSentFlag = allMessagesSentFlag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseMailThreadAllOf1 baseMailThreadAllOf1 = (BaseMailThreadAllOf1) o;
    return Objects.equals(this.parties, baseMailThreadAllOf1.parties) &&
        Objects.equals(this.draftsParties, baseMailThreadAllOf1.draftsParties) &&
        Objects.equals(this.folders, baseMailThreadAllOf1.folders) &&
        Objects.equals(this.version, baseMailThreadAllOf1.version) &&
        equalsNullable(this.snippetDraft, baseMailThreadAllOf1.snippetDraft) &&
        Objects.equals(this.snippetSent, baseMailThreadAllOf1.snippetSent) &&
        Objects.equals(this.messageCount, baseMailThreadAllOf1.messageCount) &&
        Objects.equals(this.hasDraftFlag, baseMailThreadAllOf1.hasDraftFlag) &&
        Objects.equals(this.hasSentFlag, baseMailThreadAllOf1.hasSentFlag) &&
        Objects.equals(this.archivedFlag, baseMailThreadAllOf1.archivedFlag) &&
        Objects.equals(this.sharedFlag, baseMailThreadAllOf1.sharedFlag) &&
        Objects.equals(this.externalDeletedFlag, baseMailThreadAllOf1.externalDeletedFlag) &&
        Objects.equals(this.firstMessageToMeFlag, baseMailThreadAllOf1.firstMessageToMeFlag) &&
        Objects.equals(this.lastMessageTimestamp, baseMailThreadAllOf1.lastMessageTimestamp) &&
        Objects.equals(this.firstMessageTimestamp, baseMailThreadAllOf1.firstMessageTimestamp) &&
        equalsNullable(this.lastMessageSentTimestamp, baseMailThreadAllOf1.lastMessageSentTimestamp) &&
        Objects.equals(this.lastMessageReceivedTimestamp, baseMailThreadAllOf1.lastMessageReceivedTimestamp) &&
        Objects.equals(this.addTime, baseMailThreadAllOf1.addTime) &&
        Objects.equals(this.updateTime, baseMailThreadAllOf1.updateTime) &&
        equalsNullable(this.dealId, baseMailThreadAllOf1.dealId) &&
        equalsNullable(this.dealStatus, baseMailThreadAllOf1.dealStatus) &&
        equalsNullable(this.leadId, baseMailThreadAllOf1.leadId) &&
        Objects.equals(this.allMessagesSentFlag, baseMailThreadAllOf1.allMessagesSentFlag);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(parties, draftsParties, folders, version, hashCodeNullable(snippetDraft), snippetSent, messageCount, hasDraftFlag, hasSentFlag, archivedFlag, sharedFlag, externalDeletedFlag, firstMessageToMeFlag, lastMessageTimestamp, firstMessageTimestamp, hashCodeNullable(lastMessageSentTimestamp), lastMessageReceivedTimestamp, addTime, updateTime, hashCodeNullable(dealId), hashCodeNullable(dealStatus), hashCodeNullable(leadId), allMessagesSentFlag);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseMailThreadAllOf1 {\n");
    sb.append("    parties: ").append(toIndentedString(parties)).append("\n");
    sb.append("    draftsParties: ").append(toIndentedString(draftsParties)).append("\n");
    sb.append("    folders: ").append(toIndentedString(folders)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    snippetDraft: ").append(toIndentedString(snippetDraft)).append("\n");
    sb.append("    snippetSent: ").append(toIndentedString(snippetSent)).append("\n");
    sb.append("    messageCount: ").append(toIndentedString(messageCount)).append("\n");
    sb.append("    hasDraftFlag: ").append(toIndentedString(hasDraftFlag)).append("\n");
    sb.append("    hasSentFlag: ").append(toIndentedString(hasSentFlag)).append("\n");
    sb.append("    archivedFlag: ").append(toIndentedString(archivedFlag)).append("\n");
    sb.append("    sharedFlag: ").append(toIndentedString(sharedFlag)).append("\n");
    sb.append("    externalDeletedFlag: ").append(toIndentedString(externalDeletedFlag)).append("\n");
    sb.append("    firstMessageToMeFlag: ").append(toIndentedString(firstMessageToMeFlag)).append("\n");
    sb.append("    lastMessageTimestamp: ").append(toIndentedString(lastMessageTimestamp)).append("\n");
    sb.append("    firstMessageTimestamp: ").append(toIndentedString(firstMessageTimestamp)).append("\n");
    sb.append("    lastMessageSentTimestamp: ").append(toIndentedString(lastMessageSentTimestamp)).append("\n");
    sb.append("    lastMessageReceivedTimestamp: ").append(toIndentedString(lastMessageReceivedTimestamp)).append("\n");
    sb.append("    addTime: ").append(toIndentedString(addTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    dealId: ").append(toIndentedString(dealId)).append("\n");
    sb.append("    dealStatus: ").append(toIndentedString(dealStatus)).append("\n");
    sb.append("    leadId: ").append(toIndentedString(leadId)).append("\n");
    sb.append("    allMessagesSentFlag: ").append(toIndentedString(allMessagesSentFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

