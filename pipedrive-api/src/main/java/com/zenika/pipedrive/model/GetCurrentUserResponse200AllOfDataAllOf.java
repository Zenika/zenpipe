/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zenika.pipedrive.model.GetCurrentUserResponse200AllOfDataAllOfLanguage;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetCurrentUserResponse200AllOfDataAllOf
 */
@JsonPropertyOrder({
  GetCurrentUserResponse200AllOfDataAllOf.JSON_PROPERTY_COMPANY_ID,
  GetCurrentUserResponse200AllOfDataAllOf.JSON_PROPERTY_COMPANY_NAME,
  GetCurrentUserResponse200AllOfDataAllOf.JSON_PROPERTY_COMPANY_DOMAIN,
  GetCurrentUserResponse200AllOfDataAllOf.JSON_PROPERTY_COMPANY_COUNTRY,
  GetCurrentUserResponse200AllOfDataAllOf.JSON_PROPERTY_COMPANY_INDUSTRY,
  GetCurrentUserResponse200AllOfDataAllOf.JSON_PROPERTY_LANGUAGE
})
@JsonTypeName("getCurrentUserResponse200_allOf_data_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class GetCurrentUserResponse200AllOfDataAllOf {
  public static final String JSON_PROPERTY_COMPANY_ID = "company_id";
  private Integer companyId;

  public static final String JSON_PROPERTY_COMPANY_NAME = "company_name";
  private String companyName;

  public static final String JSON_PROPERTY_COMPANY_DOMAIN = "company_domain";
  private String companyDomain;

  public static final String JSON_PROPERTY_COMPANY_COUNTRY = "company_country";
  private String companyCountry;

  public static final String JSON_PROPERTY_COMPANY_INDUSTRY = "company_industry";
  private String companyIndustry;

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private GetCurrentUserResponse200AllOfDataAllOfLanguage language;

  public GetCurrentUserResponse200AllOfDataAllOf() {
  }

  public GetCurrentUserResponse200AllOfDataAllOf companyId(Integer companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * The user company ID
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user company ID")
  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCompanyId() {
    return companyId;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyId(Integer companyId) {
    this.companyId = companyId;
  }


  public GetCurrentUserResponse200AllOfDataAllOf companyName(String companyName) {
    
    this.companyName = companyName;
    return this;
  }

   /**
   * The user company name
   * @return companyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user company name")
  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompanyName() {
    return companyName;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public GetCurrentUserResponse200AllOfDataAllOf companyDomain(String companyDomain) {
    
    this.companyDomain = companyDomain;
    return this;
  }

   /**
   * The user company domain
   * @return companyDomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user company domain")
  @JsonProperty(JSON_PROPERTY_COMPANY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompanyDomain() {
    return companyDomain;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyDomain(String companyDomain) {
    this.companyDomain = companyDomain;
  }


  public GetCurrentUserResponse200AllOfDataAllOf companyCountry(String companyCountry) {
    
    this.companyCountry = companyCountry;
    return this;
  }

   /**
   * The user company country
   * @return companyCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user company country")
  @JsonProperty(JSON_PROPERTY_COMPANY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompanyCountry() {
    return companyCountry;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyCountry(String companyCountry) {
    this.companyCountry = companyCountry;
  }


  public GetCurrentUserResponse200AllOfDataAllOf companyIndustry(String companyIndustry) {
    
    this.companyIndustry = companyIndustry;
    return this;
  }

   /**
   * The user company industry
   * @return companyIndustry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user company industry")
  @JsonProperty(JSON_PROPERTY_COMPANY_INDUSTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompanyIndustry() {
    return companyIndustry;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_INDUSTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyIndustry(String companyIndustry) {
    this.companyIndustry = companyIndustry;
  }


  public GetCurrentUserResponse200AllOfDataAllOf language(GetCurrentUserResponse200AllOfDataAllOfLanguage language) {
    
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetCurrentUserResponse200AllOfDataAllOfLanguage getLanguage() {
    return language;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguage(GetCurrentUserResponse200AllOfDataAllOfLanguage language) {
    this.language = language;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCurrentUserResponse200AllOfDataAllOf getCurrentUserResponse200AllOfDataAllOf = (GetCurrentUserResponse200AllOfDataAllOf) o;
    return Objects.equals(this.companyId, getCurrentUserResponse200AllOfDataAllOf.companyId) &&
        Objects.equals(this.companyName, getCurrentUserResponse200AllOfDataAllOf.companyName) &&
        Objects.equals(this.companyDomain, getCurrentUserResponse200AllOfDataAllOf.companyDomain) &&
        Objects.equals(this.companyCountry, getCurrentUserResponse200AllOfDataAllOf.companyCountry) &&
        Objects.equals(this.companyIndustry, getCurrentUserResponse200AllOfDataAllOf.companyIndustry) &&
        Objects.equals(this.language, getCurrentUserResponse200AllOfDataAllOf.language);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, companyName, companyDomain, companyCountry, companyIndustry, language);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCurrentUserResponse200AllOfDataAllOf {\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    companyDomain: ").append(toIndentedString(companyDomain)).append("\n");
    sb.append("    companyCountry: ").append(toIndentedString(companyCountry)).append("\n");
    sb.append("    companyIndustry: ").append(toIndentedString(companyIndustry)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

