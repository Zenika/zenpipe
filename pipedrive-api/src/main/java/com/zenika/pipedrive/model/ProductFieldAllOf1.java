/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ProductFieldAllOf1
 */
@JsonPropertyOrder({
  ProductFieldAllOf1.JSON_PROPERTY_ID,
  ProductFieldAllOf1.JSON_PROPERTY_KEY,
  ProductFieldAllOf1.JSON_PROPERTY_ORDER_NR,
  ProductFieldAllOf1.JSON_PROPERTY_ADD_TIME,
  ProductFieldAllOf1.JSON_PROPERTY_UPDATE_TIME,
  ProductFieldAllOf1.JSON_PROPERTY_LAST_UPDATED_BY_USER_ID,
  ProductFieldAllOf1.JSON_PROPERTY_ACTIVE_FLAG,
  ProductFieldAllOf1.JSON_PROPERTY_EDIT_FLAG,
  ProductFieldAllOf1.JSON_PROPERTY_ADD_VISIBLE_FLAG,
  ProductFieldAllOf1.JSON_PROPERTY_IMPORTANT_FLAG,
  ProductFieldAllOf1.JSON_PROPERTY_BULK_EDIT_ALLOWED,
  ProductFieldAllOf1.JSON_PROPERTY_SEARCHABLE_FLAG,
  ProductFieldAllOf1.JSON_PROPERTY_FILTERING_ALLOWED,
  ProductFieldAllOf1.JSON_PROPERTY_SORTABLE_FLAG,
  ProductFieldAllOf1.JSON_PROPERTY_MANDATORY_FLAG
})
@JsonTypeName("productField_allOf_1")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class ProductFieldAllOf1 {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_ORDER_NR = "order_nr";
  private Integer orderNr;

  public static final String JSON_PROPERTY_ADD_TIME = "add_time";
  private String addTime;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  private String updateTime;

  public static final String JSON_PROPERTY_LAST_UPDATED_BY_USER_ID = "last_updated_by_user_id";
  private Integer lastUpdatedByUserId;

  public static final String JSON_PROPERTY_ACTIVE_FLAG = "active_flag";
  private Boolean activeFlag;

  public static final String JSON_PROPERTY_EDIT_FLAG = "edit_flag";
  private Boolean editFlag;

  public static final String JSON_PROPERTY_ADD_VISIBLE_FLAG = "add_visible_flag";
  private Boolean addVisibleFlag;

  public static final String JSON_PROPERTY_IMPORTANT_FLAG = "important_flag";
  private Boolean importantFlag;

  public static final String JSON_PROPERTY_BULK_EDIT_ALLOWED = "bulk_edit_allowed";
  private Boolean bulkEditAllowed;

  public static final String JSON_PROPERTY_SEARCHABLE_FLAG = "searchable_flag";
  private Boolean searchableFlag;

  public static final String JSON_PROPERTY_FILTERING_ALLOWED = "filtering_allowed";
  private Boolean filteringAllowed;

  public static final String JSON_PROPERTY_SORTABLE_FLAG = "sortable_flag";
  private Boolean sortableFlag;

  public static final String JSON_PROPERTY_MANDATORY_FLAG = "mandatory_flag";
  private Boolean mandatoryFlag;

  public ProductFieldAllOf1() {
  }

  public ProductFieldAllOf1 id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the product field
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the product field")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public ProductFieldAllOf1 key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * The key of the product field
   * @return key
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key of the product field")
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(String key) {
    this.key = key;
  }


  public ProductFieldAllOf1 orderNr(Integer orderNr) {
    
    this.orderNr = orderNr;
    return this;
  }

   /**
   * The position (index) of the product field in the detail view
   * @return orderNr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The position (index) of the product field in the detail view")
  @JsonProperty(JSON_PROPERTY_ORDER_NR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrderNr() {
    return orderNr;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_NR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderNr(Integer orderNr) {
    this.orderNr = orderNr;
  }


  public ProductFieldAllOf1 addTime(String addTime) {
    
    this.addTime = addTime;
    return this;
  }

   /**
   * The product field creation time. Format: YYYY-MM-DD HH:MM:SS
   * @return addTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The product field creation time. Format: YYYY-MM-DD HH:MM:SS")
  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddTime() {
    return addTime;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddTime(String addTime) {
    this.addTime = addTime;
  }


  public ProductFieldAllOf1 updateTime(String updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * The product field last update time. Format: YYYY-MM-DD HH:MM:SS
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The product field last update time. Format: YYYY-MM-DD HH:MM:SS")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  public ProductFieldAllOf1 lastUpdatedByUserId(Integer lastUpdatedByUserId) {
    
    this.lastUpdatedByUserId = lastUpdatedByUserId;
    return this;
  }

   /**
   * The ID of the last user to update the product field
   * @return lastUpdatedByUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the last user to update the product field")
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_BY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLastUpdatedByUserId() {
    return lastUpdatedByUserId;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_BY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdatedByUserId(Integer lastUpdatedByUserId) {
    this.lastUpdatedByUserId = lastUpdatedByUserId;
  }


  public ProductFieldAllOf1 activeFlag(Boolean activeFlag) {
    
    this.activeFlag = activeFlag;
    return this;
  }

   /**
   * Whether or not the product field is currently active
   * @return activeFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the product field is currently active")
  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActiveFlag() {
    return activeFlag;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveFlag(Boolean activeFlag) {
    this.activeFlag = activeFlag;
  }


  public ProductFieldAllOf1 editFlag(Boolean editFlag) {
    
    this.editFlag = editFlag;
    return this;
  }

   /**
   * Whether or not the product field name and metadata is editable
   * @return editFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the product field name and metadata is editable")
  @JsonProperty(JSON_PROPERTY_EDIT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEditFlag() {
    return editFlag;
  }


  @JsonProperty(JSON_PROPERTY_EDIT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditFlag(Boolean editFlag) {
    this.editFlag = editFlag;
  }


  public ProductFieldAllOf1 addVisibleFlag(Boolean addVisibleFlag) {
    
    this.addVisibleFlag = addVisibleFlag;
    return this;
  }

   /**
   * Whether or not the product field is visible in the Add Product Modal
   * @return addVisibleFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the product field is visible in the Add Product Modal")
  @JsonProperty(JSON_PROPERTY_ADD_VISIBLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAddVisibleFlag() {
    return addVisibleFlag;
  }


  @JsonProperty(JSON_PROPERTY_ADD_VISIBLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddVisibleFlag(Boolean addVisibleFlag) {
    this.addVisibleFlag = addVisibleFlag;
  }


  public ProductFieldAllOf1 importantFlag(Boolean importantFlag) {
    
    this.importantFlag = importantFlag;
    return this;
  }

   /**
   * Whether or not the product field is marked as important
   * @return importantFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the product field is marked as important")
  @JsonProperty(JSON_PROPERTY_IMPORTANT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getImportantFlag() {
    return importantFlag;
  }


  @JsonProperty(JSON_PROPERTY_IMPORTANT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImportantFlag(Boolean importantFlag) {
    this.importantFlag = importantFlag;
  }


  public ProductFieldAllOf1 bulkEditAllowed(Boolean bulkEditAllowed) {
    
    this.bulkEditAllowed = bulkEditAllowed;
    return this;
  }

   /**
   * Whether or not the product field data can be edited
   * @return bulkEditAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the product field data can be edited")
  @JsonProperty(JSON_PROPERTY_BULK_EDIT_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBulkEditAllowed() {
    return bulkEditAllowed;
  }


  @JsonProperty(JSON_PROPERTY_BULK_EDIT_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBulkEditAllowed(Boolean bulkEditAllowed) {
    this.bulkEditAllowed = bulkEditAllowed;
  }


  public ProductFieldAllOf1 searchableFlag(Boolean searchableFlag) {
    
    this.searchableFlag = searchableFlag;
    return this;
  }

   /**
   * Whether or not the product field is searchable
   * @return searchableFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the product field is searchable")
  @JsonProperty(JSON_PROPERTY_SEARCHABLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSearchableFlag() {
    return searchableFlag;
  }


  @JsonProperty(JSON_PROPERTY_SEARCHABLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchableFlag(Boolean searchableFlag) {
    this.searchableFlag = searchableFlag;
  }


  public ProductFieldAllOf1 filteringAllowed(Boolean filteringAllowed) {
    
    this.filteringAllowed = filteringAllowed;
    return this;
  }

   /**
   * Whether or not the product field value can be used when filtering searches
   * @return filteringAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the product field value can be used when filtering searches")
  @JsonProperty(JSON_PROPERTY_FILTERING_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFilteringAllowed() {
    return filteringAllowed;
  }


  @JsonProperty(JSON_PROPERTY_FILTERING_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilteringAllowed(Boolean filteringAllowed) {
    this.filteringAllowed = filteringAllowed;
  }


  public ProductFieldAllOf1 sortableFlag(Boolean sortableFlag) {
    
    this.sortableFlag = sortableFlag;
    return this;
  }

   /**
   * Whether or not the product field is sortable
   * @return sortableFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the product field is sortable")
  @JsonProperty(JSON_PROPERTY_SORTABLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSortableFlag() {
    return sortableFlag;
  }


  @JsonProperty(JSON_PROPERTY_SORTABLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSortableFlag(Boolean sortableFlag) {
    this.sortableFlag = sortableFlag;
  }


  public ProductFieldAllOf1 mandatoryFlag(Boolean mandatoryFlag) {
    
    this.mandatoryFlag = mandatoryFlag;
    return this;
  }

   /**
   * Whether or not the product field is mandatory when creating products
   * @return mandatoryFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the product field is mandatory when creating products")
  @JsonProperty(JSON_PROPERTY_MANDATORY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMandatoryFlag() {
    return mandatoryFlag;
  }


  @JsonProperty(JSON_PROPERTY_MANDATORY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMandatoryFlag(Boolean mandatoryFlag) {
    this.mandatoryFlag = mandatoryFlag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductFieldAllOf1 productFieldAllOf1 = (ProductFieldAllOf1) o;
    return Objects.equals(this.id, productFieldAllOf1.id) &&
        Objects.equals(this.key, productFieldAllOf1.key) &&
        Objects.equals(this.orderNr, productFieldAllOf1.orderNr) &&
        Objects.equals(this.addTime, productFieldAllOf1.addTime) &&
        Objects.equals(this.updateTime, productFieldAllOf1.updateTime) &&
        Objects.equals(this.lastUpdatedByUserId, productFieldAllOf1.lastUpdatedByUserId) &&
        Objects.equals(this.activeFlag, productFieldAllOf1.activeFlag) &&
        Objects.equals(this.editFlag, productFieldAllOf1.editFlag) &&
        Objects.equals(this.addVisibleFlag, productFieldAllOf1.addVisibleFlag) &&
        Objects.equals(this.importantFlag, productFieldAllOf1.importantFlag) &&
        Objects.equals(this.bulkEditAllowed, productFieldAllOf1.bulkEditAllowed) &&
        Objects.equals(this.searchableFlag, productFieldAllOf1.searchableFlag) &&
        Objects.equals(this.filteringAllowed, productFieldAllOf1.filteringAllowed) &&
        Objects.equals(this.sortableFlag, productFieldAllOf1.sortableFlag) &&
        Objects.equals(this.mandatoryFlag, productFieldAllOf1.mandatoryFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, key, orderNr, addTime, updateTime, lastUpdatedByUserId, activeFlag, editFlag, addVisibleFlag, importantFlag, bulkEditAllowed, searchableFlag, filteringAllowed, sortableFlag, mandatoryFlag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductFieldAllOf1 {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    orderNr: ").append(toIndentedString(orderNr)).append("\n");
    sb.append("    addTime: ").append(toIndentedString(addTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    lastUpdatedByUserId: ").append(toIndentedString(lastUpdatedByUserId)).append("\n");
    sb.append("    activeFlag: ").append(toIndentedString(activeFlag)).append("\n");
    sb.append("    editFlag: ").append(toIndentedString(editFlag)).append("\n");
    sb.append("    addVisibleFlag: ").append(toIndentedString(addVisibleFlag)).append("\n");
    sb.append("    importantFlag: ").append(toIndentedString(importantFlag)).append("\n");
    sb.append("    bulkEditAllowed: ").append(toIndentedString(bulkEditAllowed)).append("\n");
    sb.append("    searchableFlag: ").append(toIndentedString(searchableFlag)).append("\n");
    sb.append("    filteringAllowed: ").append(toIndentedString(filteringAllowed)).append("\n");
    sb.append("    sortableFlag: ").append(toIndentedString(sortableFlag)).append("\n");
    sb.append("    mandatoryFlag: ").append(toIndentedString(mandatoryFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

