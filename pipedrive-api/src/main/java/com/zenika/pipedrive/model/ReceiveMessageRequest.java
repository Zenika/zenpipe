/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zenika.pipedrive.model.ReceiveMessageRequestAttachmentsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ReceiveMessageRequest
 */
@JsonPropertyOrder({
  ReceiveMessageRequest.JSON_PROPERTY_ID,
  ReceiveMessageRequest.JSON_PROPERTY_CHANNEL_ID,
  ReceiveMessageRequest.JSON_PROPERTY_SENDER_ID,
  ReceiveMessageRequest.JSON_PROPERTY_CONVERSATION_ID,
  ReceiveMessageRequest.JSON_PROPERTY_MESSAGE,
  ReceiveMessageRequest.JSON_PROPERTY_STATUS,
  ReceiveMessageRequest.JSON_PROPERTY_CREATED_AT,
  ReceiveMessageRequest.JSON_PROPERTY_REPLY_BY,
  ReceiveMessageRequest.JSON_PROPERTY_CONVERSATION_LINK,
  ReceiveMessageRequest.JSON_PROPERTY_ATTACHMENTS
})
@JsonTypeName("receiveMessage_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class ReceiveMessageRequest {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CHANNEL_ID = "channel_id";
  private String channelId;

  public static final String JSON_PROPERTY_SENDER_ID = "sender_id";
  private String senderId;

  public static final String JSON_PROPERTY_CONVERSATION_ID = "conversation_id";
  private String conversationId;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  /**
   * The status of the message
   */
  public enum StatusEnum {
    SENT("sent"),
    
    DELIVERED("delivered"),
    
    READ("read"),
    
    FAILED("failed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_REPLY_BY = "reply_by";
  private OffsetDateTime replyBy;

  public static final String JSON_PROPERTY_CONVERSATION_LINK = "conversation_link";
  private String conversationLink;

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  private List<ReceiveMessageRequestAttachmentsInner> attachments = null;

  public ReceiveMessageRequest() {
  }

  public ReceiveMessageRequest id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the message
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID of the message")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public ReceiveMessageRequest channelId(String channelId) {
    
    this.channelId = channelId;
    return this;
  }

   /**
   * The channel ID as in the provider
   * @return channelId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The channel ID as in the provider")
  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getChannelId() {
    return channelId;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public ReceiveMessageRequest senderId(String senderId) {
    
    this.senderId = senderId;
    return this;
  }

   /**
   * The ID of the provider&#39;s user that sent the message
   * @return senderId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID of the provider's user that sent the message")
  @JsonProperty(JSON_PROPERTY_SENDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSenderId() {
    return senderId;
  }


  @JsonProperty(JSON_PROPERTY_SENDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSenderId(String senderId) {
    this.senderId = senderId;
  }


  public ReceiveMessageRequest conversationId(String conversationId) {
    
    this.conversationId = conversationId;
    return this;
  }

   /**
   * The ID of the conversation
   * @return conversationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID of the conversation")
  @JsonProperty(JSON_PROPERTY_CONVERSATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConversationId() {
    return conversationId;
  }


  @JsonProperty(JSON_PROPERTY_CONVERSATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConversationId(String conversationId) {
    this.conversationId = conversationId;
  }


  public ReceiveMessageRequest message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * The body of the message
   * @return message
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The body of the message")
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessage(String message) {
    this.message = message;
  }


  public ReceiveMessageRequest status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * The status of the message
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The status of the message")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ReceiveMessageRequest createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date and time when the message was created in the provider, in UTC. Format: YYYY-MM-DD HH:MM
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The date and time when the message was created in the provider, in UTC. Format: YYYY-MM-DD HH:MM")
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public ReceiveMessageRequest replyBy(OffsetDateTime replyBy) {
    
    this.replyBy = replyBy;
    return this;
  }

   /**
   * The date and time when the message can no longer receive a reply, in UTC. Format: YYYY-MM-DD HH:MM
   * @return replyBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time when the message can no longer receive a reply, in UTC. Format: YYYY-MM-DD HH:MM")
  @JsonProperty(JSON_PROPERTY_REPLY_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getReplyBy() {
    return replyBy;
  }


  @JsonProperty(JSON_PROPERTY_REPLY_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplyBy(OffsetDateTime replyBy) {
    this.replyBy = replyBy;
  }


  public ReceiveMessageRequest conversationLink(String conversationLink) {
    
    this.conversationLink = conversationLink;
    return this;
  }

   /**
   * A URL that can open the conversation in the provider&#39;s side
   * @return conversationLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URL that can open the conversation in the provider's side")
  @JsonProperty(JSON_PROPERTY_CONVERSATION_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConversationLink() {
    return conversationLink;
  }


  @JsonProperty(JSON_PROPERTY_CONVERSATION_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConversationLink(String conversationLink) {
    this.conversationLink = conversationLink;
  }


  public ReceiveMessageRequest attachments(List<ReceiveMessageRequestAttachmentsInner> attachments) {
    
    this.attachments = attachments;
    return this;
  }

  public ReceiveMessageRequest addAttachmentsItem(ReceiveMessageRequestAttachmentsInner attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * The list of attachments available in the message
   * @return attachments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of attachments available in the message")
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ReceiveMessageRequestAttachmentsInner> getAttachments() {
    return attachments;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttachments(List<ReceiveMessageRequestAttachmentsInner> attachments) {
    this.attachments = attachments;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReceiveMessageRequest receiveMessageRequest = (ReceiveMessageRequest) o;
    return Objects.equals(this.id, receiveMessageRequest.id) &&
        Objects.equals(this.channelId, receiveMessageRequest.channelId) &&
        Objects.equals(this.senderId, receiveMessageRequest.senderId) &&
        Objects.equals(this.conversationId, receiveMessageRequest.conversationId) &&
        Objects.equals(this.message, receiveMessageRequest.message) &&
        Objects.equals(this.status, receiveMessageRequest.status) &&
        Objects.equals(this.createdAt, receiveMessageRequest.createdAt) &&
        Objects.equals(this.replyBy, receiveMessageRequest.replyBy) &&
        Objects.equals(this.conversationLink, receiveMessageRequest.conversationLink) &&
        Objects.equals(this.attachments, receiveMessageRequest.attachments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, channelId, senderId, conversationId, message, status, createdAt, replyBy, conversationLink, attachments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReceiveMessageRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    senderId: ").append(toIndentedString(senderId)).append("\n");
    sb.append("    conversationId: ").append(toIndentedString(conversationId)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    replyBy: ").append(toIndentedString(replyBy)).append("\n");
    sb.append("    conversationLink: ").append(toIndentedString(conversationLink)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

