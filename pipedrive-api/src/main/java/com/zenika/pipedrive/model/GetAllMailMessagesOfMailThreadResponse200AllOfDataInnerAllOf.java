/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zenika.pipedrive.model.BaseMailThreadAllOf1PartiesToInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf
 */
@JsonPropertyOrder({
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_FROM,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_TO,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_CC,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_BCC,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_BODY_URL,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_MAIL_THREAD_ID,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_DRAFT,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_HAS_BODY_FLAG,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_SENT_FLAG,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_SENT_FROM_PIPEDRIVE_FLAG,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_MESSAGE_TIME,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_ADD_TIME,
  GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.JSON_PROPERTY_UPDATE_TIME
})
@JsonTypeName("getAllMailMessagesOfMailThreadResponse200_allOf_data_inner_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf {
  public static final String JSON_PROPERTY_FROM = "from";
  private List<BaseMailThreadAllOf1PartiesToInner> from = null;

  public static final String JSON_PROPERTY_TO = "to";
  private List<BaseMailThreadAllOf1PartiesToInner> to = null;

  public static final String JSON_PROPERTY_CC = "cc";
  private List<BaseMailThreadAllOf1PartiesToInner> cc = null;

  public static final String JSON_PROPERTY_BCC = "bcc";
  private List<BaseMailThreadAllOf1PartiesToInner> bcc = null;

  public static final String JSON_PROPERTY_BODY_URL = "body_url";
  private String bodyUrl;

  public static final String JSON_PROPERTY_MAIL_THREAD_ID = "mail_thread_id";
  private Integer mailThreadId;

  public static final String JSON_PROPERTY_DRAFT = "draft";
  private JsonNullable<String> draft = JsonNullable.<String>undefined();

  /**
   * Gets or Sets hasBodyFlag
   */
  public enum HasBodyFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    HasBodyFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HasBodyFlagEnum fromValue(BigDecimal value) {
      for (HasBodyFlagEnum b : HasBodyFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_HAS_BODY_FLAG = "has_body_flag";
  private HasBodyFlagEnum hasBodyFlag = HasBodyFlagEnum.NUMBER_0;

  /**
   * Gets or Sets sentFlag
   */
  public enum SentFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    SentFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SentFlagEnum fromValue(BigDecimal value) {
      for (SentFlagEnum b : SentFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SENT_FLAG = "sent_flag";
  private SentFlagEnum sentFlag = SentFlagEnum.NUMBER_0;

  /**
   * Gets or Sets sentFromPipedriveFlag
   */
  public enum SentFromPipedriveFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    SentFromPipedriveFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SentFromPipedriveFlagEnum fromValue(BigDecimal value) {
      for (SentFromPipedriveFlagEnum b : SentFromPipedriveFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SENT_FROM_PIPEDRIVE_FLAG = "sent_from_pipedrive_flag";
  private SentFromPipedriveFlagEnum sentFromPipedriveFlag = SentFromPipedriveFlagEnum.NUMBER_0;

  public static final String JSON_PROPERTY_MESSAGE_TIME = "message_time";
  private OffsetDateTime messageTime;

  public static final String JSON_PROPERTY_ADD_TIME = "add_time";
  private OffsetDateTime addTime;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  private OffsetDateTime updateTime;

  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf() {
  }

  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf from(List<BaseMailThreadAllOf1PartiesToInner> from) {
    
    this.from = from;
    return this;
  }

  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf addFromItem(BaseMailThreadAllOf1PartiesToInner fromItem) {
    if (this.from == null) {
      this.from = new ArrayList<>();
    }
    this.from.add(fromItem);
    return this;
  }

   /**
   * Senders of the mail thread
   * @return from
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Senders of the mail thread")
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BaseMailThreadAllOf1PartiesToInner> getFrom() {
    return from;
  }


  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrom(List<BaseMailThreadAllOf1PartiesToInner> from) {
    this.from = from;
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf to(List<BaseMailThreadAllOf1PartiesToInner> to) {
    
    this.to = to;
    return this;
  }

  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf addToItem(BaseMailThreadAllOf1PartiesToInner toItem) {
    if (this.to == null) {
      this.to = new ArrayList<>();
    }
    this.to.add(toItem);
    return this;
  }

   /**
   * Recipients of the mail thread
   * @return to
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Recipients of the mail thread")
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BaseMailThreadAllOf1PartiesToInner> getTo() {
    return to;
  }


  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTo(List<BaseMailThreadAllOf1PartiesToInner> to) {
    this.to = to;
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf cc(List<BaseMailThreadAllOf1PartiesToInner> cc) {
    
    this.cc = cc;
    return this;
  }

  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf addCcItem(BaseMailThreadAllOf1PartiesToInner ccItem) {
    if (this.cc == null) {
      this.cc = new ArrayList<>();
    }
    this.cc.add(ccItem);
    return this;
  }

   /**
   * Participants of the Cc
   * @return cc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Participants of the Cc")
  @JsonProperty(JSON_PROPERTY_CC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BaseMailThreadAllOf1PartiesToInner> getCc() {
    return cc;
  }


  @JsonProperty(JSON_PROPERTY_CC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCc(List<BaseMailThreadAllOf1PartiesToInner> cc) {
    this.cc = cc;
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf bcc(List<BaseMailThreadAllOf1PartiesToInner> bcc) {
    
    this.bcc = bcc;
    return this;
  }

  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf addBccItem(BaseMailThreadAllOf1PartiesToInner bccItem) {
    if (this.bcc == null) {
      this.bcc = new ArrayList<>();
    }
    this.bcc.add(bccItem);
    return this;
  }

   /**
   * Participants of the Bcc
   * @return bcc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Participants of the Bcc")
  @JsonProperty(JSON_PROPERTY_BCC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BaseMailThreadAllOf1PartiesToInner> getBcc() {
    return bcc;
  }


  @JsonProperty(JSON_PROPERTY_BCC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBcc(List<BaseMailThreadAllOf1PartiesToInner> bcc) {
    this.bcc = bcc;
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf bodyUrl(String bodyUrl) {
    
    this.bodyUrl = bodyUrl;
    return this;
  }

   /**
   * A link to the mail thread message
   * @return bodyUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A link to the mail thread message")
  @JsonProperty(JSON_PROPERTY_BODY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBodyUrl() {
    return bodyUrl;
  }


  @JsonProperty(JSON_PROPERTY_BODY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBodyUrl(String bodyUrl) {
    this.bodyUrl = bodyUrl;
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf mailThreadId(Integer mailThreadId) {
    
    this.mailThreadId = mailThreadId;
    return this;
  }

   /**
   * ID of the mail thread
   * @return mailThreadId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the mail thread")
  @JsonProperty(JSON_PROPERTY_MAIL_THREAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMailThreadId() {
    return mailThreadId;
  }


  @JsonProperty(JSON_PROPERTY_MAIL_THREAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMailThreadId(Integer mailThreadId) {
    this.mailThreadId = mailThreadId;
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf draft(String draft) {
    this.draft = JsonNullable.<String>of(draft);
    
    return this;
  }

   /**
   * If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise &#x60;null&#x60;.
   * @return draft
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`.")
  @JsonIgnore

  public String getDraft() {
        return draft.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRAFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDraft_JsonNullable() {
    return draft;
  }
  
  @JsonProperty(JSON_PROPERTY_DRAFT)
  public void setDraft_JsonNullable(JsonNullable<String> draft) {
    this.draft = draft;
  }

  public void setDraft(String draft) {
    this.draft = JsonNullable.<String>of(draft);
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf hasBodyFlag(HasBodyFlagEnum hasBodyFlag) {
    
    this.hasBodyFlag = hasBodyFlag;
    return this;
  }

   /**
   * Get hasBodyFlag
   * @return hasBodyFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HAS_BODY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HasBodyFlagEnum getHasBodyFlag() {
    return hasBodyFlag;
  }


  @JsonProperty(JSON_PROPERTY_HAS_BODY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasBodyFlag(HasBodyFlagEnum hasBodyFlag) {
    this.hasBodyFlag = hasBodyFlag;
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf sentFlag(SentFlagEnum sentFlag) {
    
    this.sentFlag = sentFlag;
    return this;
  }

   /**
   * Get sentFlag
   * @return sentFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SentFlagEnum getSentFlag() {
    return sentFlag;
  }


  @JsonProperty(JSON_PROPERTY_SENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSentFlag(SentFlagEnum sentFlag) {
    this.sentFlag = sentFlag;
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf sentFromPipedriveFlag(SentFromPipedriveFlagEnum sentFromPipedriveFlag) {
    
    this.sentFromPipedriveFlag = sentFromPipedriveFlag;
    return this;
  }

   /**
   * Get sentFromPipedriveFlag
   * @return sentFromPipedriveFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SENT_FROM_PIPEDRIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SentFromPipedriveFlagEnum getSentFromPipedriveFlag() {
    return sentFromPipedriveFlag;
  }


  @JsonProperty(JSON_PROPERTY_SENT_FROM_PIPEDRIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSentFromPipedriveFlag(SentFromPipedriveFlagEnum sentFromPipedriveFlag) {
    this.sentFromPipedriveFlag = sentFromPipedriveFlag;
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf messageTime(OffsetDateTime messageTime) {
    
    this.messageTime = messageTime;
    return this;
  }

   /**
   * The time when the mail message was received or created
   * @return messageTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time when the mail message was received or created")
  @JsonProperty(JSON_PROPERTY_MESSAGE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getMessageTime() {
    return messageTime;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageTime(OffsetDateTime messageTime) {
    this.messageTime = messageTime;
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf addTime(OffsetDateTime addTime) {
    
    this.addTime = addTime;
    return this;
  }

   /**
   * The time when the mail message was inserted to database
   * @return addTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time when the mail message was inserted to database")
  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getAddTime() {
    return addTime;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddTime(OffsetDateTime addTime) {
    this.addTime = addTime;
  }


  public GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf updateTime(OffsetDateTime updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * The time when the mail message was updated in database received
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time when the mail message was updated in database received")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf = (GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf) o;
    return Objects.equals(this.from, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.from) &&
        Objects.equals(this.to, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.to) &&
        Objects.equals(this.cc, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.cc) &&
        Objects.equals(this.bcc, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.bcc) &&
        Objects.equals(this.bodyUrl, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.bodyUrl) &&
        Objects.equals(this.mailThreadId, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.mailThreadId) &&
        equalsNullable(this.draft, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.draft) &&
        Objects.equals(this.hasBodyFlag, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.hasBodyFlag) &&
        Objects.equals(this.sentFlag, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.sentFlag) &&
        Objects.equals(this.sentFromPipedriveFlag, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.sentFromPipedriveFlag) &&
        Objects.equals(this.messageTime, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.messageTime) &&
        Objects.equals(this.addTime, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.addTime) &&
        Objects.equals(this.updateTime, getAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf.updateTime);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, to, cc, bcc, bodyUrl, mailThreadId, hashCodeNullable(draft), hasBodyFlag, sentFlag, sentFromPipedriveFlag, messageTime, addTime, updateTime);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAllMailMessagesOfMailThreadResponse200AllOfDataInnerAllOf {\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    cc: ").append(toIndentedString(cc)).append("\n");
    sb.append("    bcc: ").append(toIndentedString(bcc)).append("\n");
    sb.append("    bodyUrl: ").append(toIndentedString(bodyUrl)).append("\n");
    sb.append("    mailThreadId: ").append(toIndentedString(mailThreadId)).append("\n");
    sb.append("    draft: ").append(toIndentedString(draft)).append("\n");
    sb.append("    hasBodyFlag: ").append(toIndentedString(hasBodyFlag)).append("\n");
    sb.append("    sentFlag: ").append(toIndentedString(sentFlag)).append("\n");
    sb.append("    sentFromPipedriveFlag: ").append(toIndentedString(sentFromPipedriveFlag)).append("\n");
    sb.append("    messageTime: ").append(toIndentedString(messageTime)).append("\n");
    sb.append("    addTime: ").append(toIndentedString(addTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

