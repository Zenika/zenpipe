/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zenika.pipedrive.model.PersonItemAllOfPictureIdAllOf1Pictures;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The ID of the picture
 */
@ApiModel(description = "The ID of the picture")
@JsonPropertyOrder({
  GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.JSON_PROPERTY_ID,
  GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.JSON_PROPERTY_ITEM_TYPE,
  GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.JSON_PROPERTY_ITEM_ID,
  GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.JSON_PROPERTY_ACTIVE_FLAG,
  GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.JSON_PROPERTY_ADD_TIME,
  GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.JSON_PROPERTY_UPDATE_TIME,
  GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.JSON_PROPERTY_ADDED_BY_USER_ID,
  GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.JSON_PROPERTY_PICTURES
})
@JsonTypeName("getOrganizationsResponse200_allOf_related_objects_picture_PICTURE_ID")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_ITEM_TYPE = "item_type";
  private String itemType;

  public static final String JSON_PROPERTY_ITEM_ID = "item_id";
  private Integer itemId;

  public static final String JSON_PROPERTY_ACTIVE_FLAG = "active_flag";
  private Boolean activeFlag;

  public static final String JSON_PROPERTY_ADD_TIME = "add_time";
  private String addTime;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  private String updateTime;

  public static final String JSON_PROPERTY_ADDED_BY_USER_ID = "added_by_user_id";
  private Integer addedByUserId;

  public static final String JSON_PROPERTY_PICTURES = "pictures";
  private PersonItemAllOfPictureIdAllOf1Pictures pictures;

  public GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID() {
  }

  public GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the picture associated with the item
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the picture associated with the item")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID itemType(String itemType) {
    
    this.itemType = itemType;
    return this;
  }

   /**
   * The type of item the picture is related to
   * @return itemType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of item the picture is related to")
  @JsonProperty(JSON_PROPERTY_ITEM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getItemType() {
    return itemType;
  }


  @JsonProperty(JSON_PROPERTY_ITEM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemType(String itemType) {
    this.itemType = itemType;
  }


  public GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID itemId(Integer itemId) {
    
    this.itemId = itemId;
    return this;
  }

   /**
   * The ID of related item
   * @return itemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of related item")
  @JsonProperty(JSON_PROPERTY_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getItemId() {
    return itemId;
  }


  @JsonProperty(JSON_PROPERTY_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemId(Integer itemId) {
    this.itemId = itemId;
  }


  public GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID activeFlag(Boolean activeFlag) {
    
    this.activeFlag = activeFlag;
    return this;
  }

   /**
   * Whether the associated picture is active or not
   * @return activeFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the associated picture is active or not")
  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActiveFlag() {
    return activeFlag;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveFlag(Boolean activeFlag) {
    this.activeFlag = activeFlag;
  }


  public GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID addTime(String addTime) {
    
    this.addTime = addTime;
    return this;
  }

   /**
   * The add time of the picture
   * @return addTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The add time of the picture")
  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddTime() {
    return addTime;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddTime(String addTime) {
    this.addTime = addTime;
  }


  public GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID updateTime(String updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * The update time of the picture
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The update time of the picture")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  public GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID addedByUserId(Integer addedByUserId) {
    
    this.addedByUserId = addedByUserId;
    return this;
  }

   /**
   * The ID of the user who added the picture
   * @return addedByUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the user who added the picture")
  @JsonProperty(JSON_PROPERTY_ADDED_BY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAddedByUserId() {
    return addedByUserId;
  }


  @JsonProperty(JSON_PROPERTY_ADDED_BY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddedByUserId(Integer addedByUserId) {
    this.addedByUserId = addedByUserId;
  }


  public GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID pictures(PersonItemAllOfPictureIdAllOf1Pictures pictures) {
    
    this.pictures = pictures;
    return this;
  }

   /**
   * Get pictures
   * @return pictures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PICTURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PersonItemAllOfPictureIdAllOf1Pictures getPictures() {
    return pictures;
  }


  @JsonProperty(JSON_PROPERTY_PICTURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPictures(PersonItemAllOfPictureIdAllOf1Pictures pictures) {
    this.pictures = pictures;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID getOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID = (GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID) o;
    return Objects.equals(this.id, getOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.id) &&
        Objects.equals(this.itemType, getOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.itemType) &&
        Objects.equals(this.itemId, getOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.itemId) &&
        Objects.equals(this.activeFlag, getOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.activeFlag) &&
        Objects.equals(this.addTime, getOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.addTime) &&
        Objects.equals(this.updateTime, getOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.updateTime) &&
        Objects.equals(this.addedByUserId, getOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.addedByUserId) &&
        Objects.equals(this.pictures, getOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID.pictures);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, itemType, itemId, activeFlag, addTime, updateTime, addedByUserId, pictures);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOrganizationsResponse200AllOfRelatedObjectsPicturePICTUREID {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    activeFlag: ").append(toIndentedString(activeFlag)).append("\n");
    sb.append("    addTime: ").append(toIndentedString(addTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    addedByUserId: ").append(toIndentedString(addedByUserId)).append("\n");
    sb.append("    pictures: ").append(toIndentedString(pictures)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

