/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AddDealRequest
 */
@JsonPropertyOrder({
  AddDealRequest.JSON_PROPERTY_TITLE,
  AddDealRequest.JSON_PROPERTY_VALUE,
  AddDealRequest.JSON_PROPERTY_CURRENCY,
  AddDealRequest.JSON_PROPERTY_USER_ID,
  AddDealRequest.JSON_PROPERTY_PERSON_ID,
  AddDealRequest.JSON_PROPERTY_ORG_ID,
  AddDealRequest.JSON_PROPERTY_PIPELINE_ID,
  AddDealRequest.JSON_PROPERTY_STAGE_ID,
  AddDealRequest.JSON_PROPERTY_STATUS,
  AddDealRequest.JSON_PROPERTY_EXPECTED_CLOSE_DATE,
  AddDealRequest.JSON_PROPERTY_PROBABILITY,
  AddDealRequest.JSON_PROPERTY_LOST_REASON,
  AddDealRequest.JSON_PROPERTY_VISIBLE_TO,
  AddDealRequest.JSON_PROPERTY_ADD_TIME
})
@JsonTypeName("addDealRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class AddDealRequest {
  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_VALUE = "value";
  private String value;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private Integer userId;

  public static final String JSON_PROPERTY_PERSON_ID = "person_id";
  private Integer personId;

  public static final String JSON_PROPERTY_ORG_ID = "org_id";
  private Integer orgId;

  public static final String JSON_PROPERTY_PIPELINE_ID = "pipeline_id";
  private Integer pipelineId;

  public static final String JSON_PROPERTY_STAGE_ID = "stage_id";
  private Integer stageId;

  /**
   * open &#x3D; Open, won &#x3D; Won, lost &#x3D; Lost, deleted &#x3D; Deleted. If omitted, status will be set to open.
   */
  public enum StatusEnum {
    OPEN("open"),
    
    WON("won"),
    
    LOST("lost"),
    
    DELETED("deleted");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_EXPECTED_CLOSE_DATE = "expected_close_date";
  private LocalDate expectedCloseDate;

  public static final String JSON_PROPERTY_PROBABILITY = "probability";
  private BigDecimal probability;

  public static final String JSON_PROPERTY_LOST_REASON = "lost_reason";
  private String lostReason;

  /**
   * Gets or Sets visibleTo
   */
  public enum VisibleToEnum {
    _1("1"),
    
    _3("3"),
    
    _5("5"),
    
    _7("7");

    private String value;

    VisibleToEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VisibleToEnum fromValue(String value) {
      for (VisibleToEnum b : VisibleToEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VISIBLE_TO = "visible_to";
  private VisibleToEnum visibleTo;

  public static final String JSON_PROPERTY_ADD_TIME = "add_time";
  private String addTime;

  public AddDealRequest() {
  }

  public AddDealRequest title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The title of the deal
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The title of the deal")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public AddDealRequest value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * The value of the deal. If omitted, value will be set to 0.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value of the deal. If omitted, value will be set to 0.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(String value) {
    this.value = value;
  }


  public AddDealRequest currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * The currency of the deal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The currency of the deal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public AddDealRequest userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The ID of the user which will be the owner of the created deal. If not provided, the user making the request will be used.
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the user which will be the owner of the created deal. If not provided, the user making the request will be used.")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public AddDealRequest personId(Integer personId) {
    
    this.personId = personId;
    return this;
  }

   /**
   * The ID of a person which this deal will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless &#x60;org_id&#x60; is specified.
   * @return personId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of a person which this deal will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless `org_id` is specified.")
  @JsonProperty(JSON_PROPERTY_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPersonId() {
    return personId;
  }


  @JsonProperty(JSON_PROPERTY_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonId(Integer personId) {
    this.personId = personId;
  }


  public AddDealRequest orgId(Integer orgId) {
    
    this.orgId = orgId;
    return this;
  }

   /**
   * The ID of an organization which this deal will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless &#x60;person_id&#x60; is specified.
   * @return orgId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of an organization which this deal will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless `person_id` is specified.")
  @JsonProperty(JSON_PROPERTY_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrgId() {
    return orgId;
  }


  @JsonProperty(JSON_PROPERTY_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrgId(Integer orgId) {
    this.orgId = orgId;
  }


  public AddDealRequest pipelineId(Integer pipelineId) {
    
    this.pipelineId = pipelineId;
    return this;
  }

   /**
   * The ID of the pipeline this deal will be added to. By default, the deal will be added to the first stage of the specified pipeline. Please note that &#x60;pipeline_id&#x60; and &#x60;stage_id&#x60; should not be used together as &#x60;pipeline_id&#x60; will be ignored.
   * @return pipelineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the pipeline this deal will be added to. By default, the deal will be added to the first stage of the specified pipeline. Please note that `pipeline_id` and `stage_id` should not be used together as `pipeline_id` will be ignored.")
  @JsonProperty(JSON_PROPERTY_PIPELINE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPipelineId() {
    return pipelineId;
  }


  @JsonProperty(JSON_PROPERTY_PIPELINE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPipelineId(Integer pipelineId) {
    this.pipelineId = pipelineId;
  }


  public AddDealRequest stageId(Integer stageId) {
    
    this.stageId = stageId;
    return this;
  }

   /**
   * The ID of the stage this deal will be added to. Please note that a pipeline will be assigned automatically based on the &#x60;stage_id&#x60;. If omitted, the deal will be placed in the first stage of the default pipeline.
   * @return stageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the stage this deal will be added to. Please note that a pipeline will be assigned automatically based on the `stage_id`. If omitted, the deal will be placed in the first stage of the default pipeline.")
  @JsonProperty(JSON_PROPERTY_STAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStageId() {
    return stageId;
  }


  @JsonProperty(JSON_PROPERTY_STAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStageId(Integer stageId) {
    this.stageId = stageId;
  }


  public AddDealRequest status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * open &#x3D; Open, won &#x3D; Won, lost &#x3D; Lost, deleted &#x3D; Deleted. If omitted, status will be set to open.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "open = Open, won = Won, lost = Lost, deleted = Deleted. If omitted, status will be set to open.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public AddDealRequest expectedCloseDate(LocalDate expectedCloseDate) {
    
    this.expectedCloseDate = expectedCloseDate;
    return this;
  }

   /**
   * The expected close date of the deal. In ISO 8601 format: YYYY-MM-DD.
   * @return expectedCloseDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The expected close date of the deal. In ISO 8601 format: YYYY-MM-DD.")
  @JsonProperty(JSON_PROPERTY_EXPECTED_CLOSE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getExpectedCloseDate() {
    return expectedCloseDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_CLOSE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedCloseDate(LocalDate expectedCloseDate) {
    this.expectedCloseDate = expectedCloseDate;
  }


  public AddDealRequest probability(BigDecimal probability) {
    
    this.probability = probability;
    return this;
  }

   /**
   * The success probability percentage of the deal. Used/shown only when &#x60;deal_probability&#x60; for the pipeline of the deal is enabled.
   * @return probability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The success probability percentage of the deal. Used/shown only when `deal_probability` for the pipeline of the deal is enabled.")
  @JsonProperty(JSON_PROPERTY_PROBABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getProbability() {
    return probability;
  }


  @JsonProperty(JSON_PROPERTY_PROBABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProbability(BigDecimal probability) {
    this.probability = probability;
  }


  public AddDealRequest lostReason(String lostReason) {
    
    this.lostReason = lostReason;
    return this;
  }

   /**
   * The optional message about why the deal was lost (to be used when status &#x3D; lost)
   * @return lostReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The optional message about why the deal was lost (to be used when status = lost)")
  @JsonProperty(JSON_PROPERTY_LOST_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLostReason() {
    return lostReason;
  }


  @JsonProperty(JSON_PROPERTY_LOST_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLostReason(String lostReason) {
    this.lostReason = lostReason;
  }


  public AddDealRequest visibleTo(VisibleToEnum visibleTo) {
    
    this.visibleTo = visibleTo;
    return this;
  }

   /**
   * Get visibleTo
   * @return visibleTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VISIBLE_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VisibleToEnum getVisibleTo() {
    return visibleTo;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleTo(VisibleToEnum visibleTo) {
    this.visibleTo = visibleTo;
  }


  public AddDealRequest addTime(String addTime) {
    
    this.addTime = addTime;
    return this;
  }

   /**
   * The optional creation date &amp; time of the deal in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS
   * @return addTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The optional creation date & time of the deal in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS")
  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddTime() {
    return addTime;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddTime(String addTime) {
    this.addTime = addTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddDealRequest addDealRequest = (AddDealRequest) o;
    return Objects.equals(this.title, addDealRequest.title) &&
        Objects.equals(this.value, addDealRequest.value) &&
        Objects.equals(this.currency, addDealRequest.currency) &&
        Objects.equals(this.userId, addDealRequest.userId) &&
        Objects.equals(this.personId, addDealRequest.personId) &&
        Objects.equals(this.orgId, addDealRequest.orgId) &&
        Objects.equals(this.pipelineId, addDealRequest.pipelineId) &&
        Objects.equals(this.stageId, addDealRequest.stageId) &&
        Objects.equals(this.status, addDealRequest.status) &&
        Objects.equals(this.expectedCloseDate, addDealRequest.expectedCloseDate) &&
        Objects.equals(this.probability, addDealRequest.probability) &&
        Objects.equals(this.lostReason, addDealRequest.lostReason) &&
        Objects.equals(this.visibleTo, addDealRequest.visibleTo) &&
        Objects.equals(this.addTime, addDealRequest.addTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, value, currency, userId, personId, orgId, pipelineId, stageId, status, expectedCloseDate, probability, lostReason, visibleTo, addTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddDealRequest {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    pipelineId: ").append(toIndentedString(pipelineId)).append("\n");
    sb.append("    stageId: ").append(toIndentedString(stageId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    expectedCloseDate: ").append(toIndentedString(expectedCloseDate)).append("\n");
    sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
    sb.append("    lostReason: ").append(toIndentedString(lostReason)).append("\n");
    sb.append("    visibleTo: ").append(toIndentedString(visibleTo)).append("\n");
    sb.append("    addTime: ").append(toIndentedString(addTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

