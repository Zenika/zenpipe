/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zenika.pipedrive.model.GetLeadsResponse200DataInnerValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AddLeadRequest
 */
@JsonPropertyOrder({
  AddLeadRequest.JSON_PROPERTY_TITLE,
  AddLeadRequest.JSON_PROPERTY_OWNER_ID,
  AddLeadRequest.JSON_PROPERTY_LABEL_IDS,
  AddLeadRequest.JSON_PROPERTY_PERSON_ID,
  AddLeadRequest.JSON_PROPERTY_ORGANIZATION_ID,
  AddLeadRequest.JSON_PROPERTY_VALUE,
  AddLeadRequest.JSON_PROPERTY_EXPECTED_CLOSE_DATE,
  AddLeadRequest.JSON_PROPERTY_VISIBLE_TO,
  AddLeadRequest.JSON_PROPERTY_WAS_SEEN
})
@JsonTypeName("addLeadRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class AddLeadRequest {
  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_OWNER_ID = "owner_id";
  private Integer ownerId;

  public static final String JSON_PROPERTY_LABEL_IDS = "label_ids";
  private List<UUID> labelIds = null;

  public static final String JSON_PROPERTY_PERSON_ID = "person_id";
  private Integer personId;

  public static final String JSON_PROPERTY_ORGANIZATION_ID = "organization_id";
  private Integer organizationId;

  public static final String JSON_PROPERTY_VALUE = "value";
  private GetLeadsResponse200DataInnerValue value;

  public static final String JSON_PROPERTY_EXPECTED_CLOSE_DATE = "expected_close_date";
  private LocalDate expectedCloseDate;

  /**
   * Gets or Sets visibleTo
   */
  public enum VisibleToEnum {
    _1("1"),
    
    _3("3"),
    
    _5("5"),
    
    _7("7");

    private String value;

    VisibleToEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VisibleToEnum fromValue(String value) {
      for (VisibleToEnum b : VisibleToEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VISIBLE_TO = "visible_to";
  private VisibleToEnum visibleTo;

  /**
   * A flag indicating whether the lead was seen by someone in the Pipedrive UI
   */
  public enum WasSeenEnum {
    TRUE(true),
    
    FALSE(false);

    private Boolean value;

    WasSeenEnum(Boolean value) {
      this.value = value;
    }

    @JsonValue
    public Boolean getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static WasSeenEnum fromValue(Boolean value) {
      for (WasSeenEnum b : WasSeenEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_WAS_SEEN = "was_seen";
  private WasSeenEnum wasSeen;

  public AddLeadRequest() {
  }

  public AddLeadRequest title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The name of the lead
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the lead")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public AddLeadRequest ownerId(Integer ownerId) {
    
    this.ownerId = ownerId;
    return this;
  }

   /**
   * The ID of the user which will be the owner of the created lead. If not provided, the user making the request will be used.
   * @return ownerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the user which will be the owner of the created lead. If not provided, the user making the request will be used.")
  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOwnerId() {
    return ownerId;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerId(Integer ownerId) {
    this.ownerId = ownerId;
  }


  public AddLeadRequest labelIds(List<UUID> labelIds) {
    
    this.labelIds = labelIds;
    return this;
  }

  public AddLeadRequest addLabelIdsItem(UUID labelIdsItem) {
    if (this.labelIds == null) {
      this.labelIds = new ArrayList<>();
    }
    this.labelIds.add(labelIdsItem);
    return this;
  }

   /**
   * The IDs of the lead labels which will be associated with the lead
   * @return labelIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the lead labels which will be associated with the lead")
  @JsonProperty(JSON_PROPERTY_LABEL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UUID> getLabelIds() {
    return labelIds;
  }


  @JsonProperty(JSON_PROPERTY_LABEL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabelIds(List<UUID> labelIds) {
    this.labelIds = labelIds;
  }


  public AddLeadRequest personId(Integer personId) {
    
    this.personId = personId;
    return this;
  }

   /**
   * The ID of a person which this lead will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless &#x60;organization_id&#x60; is specified.
   * @return personId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of a person which this lead will be linked to. If the person does not exist yet, it needs to be created first. This property is required unless `organization_id` is specified.")
  @JsonProperty(JSON_PROPERTY_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPersonId() {
    return personId;
  }


  @JsonProperty(JSON_PROPERTY_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonId(Integer personId) {
    this.personId = personId;
  }


  public AddLeadRequest organizationId(Integer organizationId) {
    
    this.organizationId = organizationId;
    return this;
  }

   /**
   * The ID of an organization which this lead will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless &#x60;person_id&#x60; is specified.
   * @return organizationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of an organization which this lead will be linked to. If the organization does not exist yet, it needs to be created first. This property is required unless `person_id` is specified.")
  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrganizationId() {
    return organizationId;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganizationId(Integer organizationId) {
    this.organizationId = organizationId;
  }


  public AddLeadRequest value(GetLeadsResponse200DataInnerValue value) {
    
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetLeadsResponse200DataInnerValue getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(GetLeadsResponse200DataInnerValue value) {
    this.value = value;
  }


  public AddLeadRequest expectedCloseDate(LocalDate expectedCloseDate) {
    
    this.expectedCloseDate = expectedCloseDate;
    return this;
  }

   /**
   * The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD.
   * @return expectedCloseDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date of when the deal which will be created from the lead is expected to be closed. In ISO 8601 format: YYYY-MM-DD.")
  @JsonProperty(JSON_PROPERTY_EXPECTED_CLOSE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getExpectedCloseDate() {
    return expectedCloseDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_CLOSE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedCloseDate(LocalDate expectedCloseDate) {
    this.expectedCloseDate = expectedCloseDate;
  }


  public AddLeadRequest visibleTo(VisibleToEnum visibleTo) {
    
    this.visibleTo = visibleTo;
    return this;
  }

   /**
   * Get visibleTo
   * @return visibleTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VISIBLE_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VisibleToEnum getVisibleTo() {
    return visibleTo;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleTo(VisibleToEnum visibleTo) {
    this.visibleTo = visibleTo;
  }


  public AddLeadRequest wasSeen(WasSeenEnum wasSeen) {
    
    this.wasSeen = wasSeen;
    return this;
  }

   /**
   * A flag indicating whether the lead was seen by someone in the Pipedrive UI
   * @return wasSeen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A flag indicating whether the lead was seen by someone in the Pipedrive UI")
  @JsonProperty(JSON_PROPERTY_WAS_SEEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WasSeenEnum getWasSeen() {
    return wasSeen;
  }


  @JsonProperty(JSON_PROPERTY_WAS_SEEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWasSeen(WasSeenEnum wasSeen) {
    this.wasSeen = wasSeen;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddLeadRequest addLeadRequest = (AddLeadRequest) o;
    return Objects.equals(this.title, addLeadRequest.title) &&
        Objects.equals(this.ownerId, addLeadRequest.ownerId) &&
        Objects.equals(this.labelIds, addLeadRequest.labelIds) &&
        Objects.equals(this.personId, addLeadRequest.personId) &&
        Objects.equals(this.organizationId, addLeadRequest.organizationId) &&
        Objects.equals(this.value, addLeadRequest.value) &&
        Objects.equals(this.expectedCloseDate, addLeadRequest.expectedCloseDate) &&
        Objects.equals(this.visibleTo, addLeadRequest.visibleTo) &&
        Objects.equals(this.wasSeen, addLeadRequest.wasSeen);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, ownerId, labelIds, personId, organizationId, value, expectedCloseDate, visibleTo, wasSeen);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddLeadRequest {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    labelIds: ").append(toIndentedString(labelIds)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    expectedCloseDate: ").append(toIndentedString(expectedCloseDate)).append("\n");
    sb.append("    visibleTo: ").append(toIndentedString(visibleTo)).append("\n");
    sb.append("    wasSeen: ").append(toIndentedString(wasSeen)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

