/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SubscriptionsIdResponse200AllOfData
 */
@JsonPropertyOrder({
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_ID,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_USER_ID,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_DEAL_ID,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_DESCRIPTION,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_IS_ACTIVE,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_CYCLES_COUNT,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_CYCLE_AMOUNT,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_INFINITE,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_CURRENCY,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_CADENCE_TYPE,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_START_DATE,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_END_DATE,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_LIFETIME_VALUE,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_FINAL_STATUS,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_ADD_TIME,
  SubscriptionsIdResponse200AllOfData.JSON_PROPERTY_UPDATE_TIME
})
@JsonTypeName("subscriptionsIdResponse200_allOf_data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class SubscriptionsIdResponse200AllOfData {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private Integer userId;

  public static final String JSON_PROPERTY_DEAL_ID = "deal_id";
  private Integer dealId;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_IS_ACTIVE = "is_active";
  private Boolean isActive;

  public static final String JSON_PROPERTY_CYCLES_COUNT = "cycles_count";
  private Integer cyclesCount;

  public static final String JSON_PROPERTY_CYCLE_AMOUNT = "cycle_amount";
  private Integer cycleAmount;

  public static final String JSON_PROPERTY_INFINITE = "infinite";
  private Boolean infinite;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_CADENCE_TYPE = "cadence_type";
  private String cadenceType;

  public static final String JSON_PROPERTY_START_DATE = "start_date";
  private LocalDate startDate;

  public static final String JSON_PROPERTY_END_DATE = "end_date";
  private LocalDate endDate;

  public static final String JSON_PROPERTY_LIFETIME_VALUE = "lifetime_value";
  private Double lifetimeValue;

  public static final String JSON_PROPERTY_FINAL_STATUS = "final_status";
  private JsonNullable<String> finalStatus = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ADD_TIME = "add_time";
  private String addTime;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  private String updateTime;

  public SubscriptionsIdResponse200AllOfData() {
  }

  public SubscriptionsIdResponse200AllOfData id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the subscription
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the subscription")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public SubscriptionsIdResponse200AllOfData userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The ID of the user who created the subscription
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the user who created the subscription")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public SubscriptionsIdResponse200AllOfData dealId(Integer dealId) {
    
    this.dealId = dealId;
    return this;
  }

   /**
   * The ID of the deal this subscription is associated with
   * @return dealId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the deal this subscription is associated with")
  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDealId() {
    return dealId;
  }


  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDealId(Integer dealId) {
    this.dealId = dealId;
  }


  public SubscriptionsIdResponse200AllOfData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the recurring subscription
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the recurring subscription")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public SubscriptionsIdResponse200AllOfData isActive(Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

   /**
   * The subscription status
   * @return isActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The subscription status")
  @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsActive() {
    return isActive;
  }


  @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public SubscriptionsIdResponse200AllOfData cyclesCount(Integer cyclesCount) {
    
    this.cyclesCount = cyclesCount;
    return this;
  }

   /**
   * Shows how many payments a recurring subscription has
   * @return cyclesCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows how many payments a recurring subscription has")
  @JsonProperty(JSON_PROPERTY_CYCLES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCyclesCount() {
    return cyclesCount;
  }


  @JsonProperty(JSON_PROPERTY_CYCLES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCyclesCount(Integer cyclesCount) {
    this.cyclesCount = cyclesCount;
  }


  public SubscriptionsIdResponse200AllOfData cycleAmount(Integer cycleAmount) {
    
    this.cycleAmount = cycleAmount;
    return this;
  }

   /**
   * The amount of each payment
   * @return cycleAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of each payment")
  @JsonProperty(JSON_PROPERTY_CYCLE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCycleAmount() {
    return cycleAmount;
  }


  @JsonProperty(JSON_PROPERTY_CYCLE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCycleAmount(Integer cycleAmount) {
    this.cycleAmount = cycleAmount;
  }


  public SubscriptionsIdResponse200AllOfData infinite(Boolean infinite) {
    
    this.infinite = infinite;
    return this;
  }

   /**
   * Indicates that the recurring subscription will last until it is manually canceled or deleted
   * @return infinite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates that the recurring subscription will last until it is manually canceled or deleted")
  @JsonProperty(JSON_PROPERTY_INFINITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInfinite() {
    return infinite;
  }


  @JsonProperty(JSON_PROPERTY_INFINITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInfinite(Boolean infinite) {
    this.infinite = infinite;
  }


  public SubscriptionsIdResponse200AllOfData currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * The currency of the subscription
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The currency of the subscription")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public SubscriptionsIdResponse200AllOfData cadenceType(String cadenceType) {
    
    this.cadenceType = cadenceType;
    return this;
  }

   /**
   * The interval between payments
   * @return cadenceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The interval between payments")
  @JsonProperty(JSON_PROPERTY_CADENCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCadenceType() {
    return cadenceType;
  }


  @JsonProperty(JSON_PROPERTY_CADENCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCadenceType(String cadenceType) {
    this.cadenceType = cadenceType;
  }


  public SubscriptionsIdResponse200AllOfData startDate(LocalDate startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The start date of the recurring subscription
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The start date of the recurring subscription")
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }


  public SubscriptionsIdResponse200AllOfData endDate(LocalDate endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The end date of the subscription
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The end date of the subscription")
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getEndDate() {
    return endDate;
  }


  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }


  public SubscriptionsIdResponse200AllOfData lifetimeValue(Double lifetimeValue) {
    
    this.lifetimeValue = lifetimeValue;
    return this;
  }

   /**
   * The total value of all payments
   * @return lifetimeValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total value of all payments")
  @JsonProperty(JSON_PROPERTY_LIFETIME_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getLifetimeValue() {
    return lifetimeValue;
  }


  @JsonProperty(JSON_PROPERTY_LIFETIME_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLifetimeValue(Double lifetimeValue) {
    this.lifetimeValue = lifetimeValue;
  }


  public SubscriptionsIdResponse200AllOfData finalStatus(String finalStatus) {
    this.finalStatus = JsonNullable.<String>of(finalStatus);
    
    return this;
  }

   /**
   * The final status of the subscription
   * @return finalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The final status of the subscription")
  @JsonIgnore

  public String getFinalStatus() {
        return finalStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FINAL_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFinalStatus_JsonNullable() {
    return finalStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_FINAL_STATUS)
  public void setFinalStatus_JsonNullable(JsonNullable<String> finalStatus) {
    this.finalStatus = finalStatus;
  }

  public void setFinalStatus(String finalStatus) {
    this.finalStatus = JsonNullable.<String>of(finalStatus);
  }


  public SubscriptionsIdResponse200AllOfData addTime(String addTime) {
    
    this.addTime = addTime;
    return this;
  }

   /**
   * The creation time of the subscription
   * @return addTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The creation time of the subscription")
  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddTime() {
    return addTime;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddTime(String addTime) {
    this.addTime = addTime;
  }


  public SubscriptionsIdResponse200AllOfData updateTime(String updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * The update time of the subscription
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The update time of the subscription")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionsIdResponse200AllOfData subscriptionsIdResponse200AllOfData = (SubscriptionsIdResponse200AllOfData) o;
    return Objects.equals(this.id, subscriptionsIdResponse200AllOfData.id) &&
        Objects.equals(this.userId, subscriptionsIdResponse200AllOfData.userId) &&
        Objects.equals(this.dealId, subscriptionsIdResponse200AllOfData.dealId) &&
        Objects.equals(this.description, subscriptionsIdResponse200AllOfData.description) &&
        Objects.equals(this.isActive, subscriptionsIdResponse200AllOfData.isActive) &&
        Objects.equals(this.cyclesCount, subscriptionsIdResponse200AllOfData.cyclesCount) &&
        Objects.equals(this.cycleAmount, subscriptionsIdResponse200AllOfData.cycleAmount) &&
        Objects.equals(this.infinite, subscriptionsIdResponse200AllOfData.infinite) &&
        Objects.equals(this.currency, subscriptionsIdResponse200AllOfData.currency) &&
        Objects.equals(this.cadenceType, subscriptionsIdResponse200AllOfData.cadenceType) &&
        Objects.equals(this.startDate, subscriptionsIdResponse200AllOfData.startDate) &&
        Objects.equals(this.endDate, subscriptionsIdResponse200AllOfData.endDate) &&
        Objects.equals(this.lifetimeValue, subscriptionsIdResponse200AllOfData.lifetimeValue) &&
        equalsNullable(this.finalStatus, subscriptionsIdResponse200AllOfData.finalStatus) &&
        Objects.equals(this.addTime, subscriptionsIdResponse200AllOfData.addTime) &&
        Objects.equals(this.updateTime, subscriptionsIdResponse200AllOfData.updateTime);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, dealId, description, isActive, cyclesCount, cycleAmount, infinite, currency, cadenceType, startDate, endDate, lifetimeValue, hashCodeNullable(finalStatus), addTime, updateTime);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionsIdResponse200AllOfData {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    dealId: ").append(toIndentedString(dealId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    cyclesCount: ").append(toIndentedString(cyclesCount)).append("\n");
    sb.append("    cycleAmount: ").append(toIndentedString(cycleAmount)).append("\n");
    sb.append("    infinite: ").append(toIndentedString(infinite)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    cadenceType: ").append(toIndentedString(cadenceType)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    lifetimeValue: ").append(toIndentedString(lifetimeValue)).append("\n");
    sb.append("    finalStatus: ").append(toIndentedString(finalStatus)).append("\n");
    sb.append("    addTime: ").append(toIndentedString(addTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

