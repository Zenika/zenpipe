/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The currency summary. This parameter is dynamic and changes according to &#x60;currency_id&#x60; value.
 */
@ApiModel(description = "The currency summary. This parameter is dynamic and changes according to `currency_id` value.")
@JsonPropertyOrder({
  PipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID.JSON_PROPERTY_COUNT,
  PipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID.JSON_PROPERTY_VALUE
})
@JsonTypeName("pipelineDetails_allOf_deals_summary_per_currency_full_CURRENCY_ID")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class PipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID {
  public static final String JSON_PROPERTY_COUNT = "count";
  private Integer count;

  public static final String JSON_PROPERTY_VALUE = "value";
  private Integer value;

  public PipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID() {
  }

  public PipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * Deals count per currency
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deals count per currency")
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCount(Integer count) {
    this.count = count;
  }


  public PipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID value(Integer value) {
    
    this.value = value;
    return this;
  }

   /**
   * Deals value per currency
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deals value per currency")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(Integer value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID pipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID = (PipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID) o;
    return Objects.equals(this.count, pipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID.count) &&
        Objects.equals(this.value, pipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineDetailsAllOfDealsSummaryPerCurrencyFullCURRENCYID {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

