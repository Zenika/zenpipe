/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MailMessageItemForListAllOf1
 */
@JsonPropertyOrder({
  MailMessageItemForListAllOf1.JSON_PROPERTY_NYLAS_ID,
  MailMessageItemForListAllOf1.JSON_PROPERTY_S3_BUCKET,
  MailMessageItemForListAllOf1.JSON_PROPERTY_S3_BUCKET_PATH,
  MailMessageItemForListAllOf1.JSON_PROPERTY_EXTERNAL_DELETED_FLAG,
  MailMessageItemForListAllOf1.JSON_PROPERTY_MUA_MESSAGE_ID,
  MailMessageItemForListAllOf1.JSON_PROPERTY_TEMPLATE_ID,
  MailMessageItemForListAllOf1.JSON_PROPERTY_TIMESTAMP,
  MailMessageItemForListAllOf1.JSON_PROPERTY_ITEM_TYPE,
  MailMessageItemForListAllOf1.JSON_PROPERTY_COMPANY_ID
})
@JsonTypeName("mailMessageItemForList_allOf_1")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class MailMessageItemForListAllOf1 {
  public static final String JSON_PROPERTY_NYLAS_ID = "nylas_id";
  private String nylasId;

  public static final String JSON_PROPERTY_S3_BUCKET = "s3_bucket";
  private String s3Bucket;

  public static final String JSON_PROPERTY_S3_BUCKET_PATH = "s3_bucket_path";
  private String s3BucketPath;

  public static final String JSON_PROPERTY_EXTERNAL_DELETED_FLAG = "external_deleted_flag";
  private Boolean externalDeletedFlag;

  public static final String JSON_PROPERTY_MUA_MESSAGE_ID = "mua_message_id";
  private String muaMessageId;

  public static final String JSON_PROPERTY_TEMPLATE_ID = "template_id";
  private Integer templateId;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private String timestamp;

  public static final String JSON_PROPERTY_ITEM_TYPE = "item_type";
  private String itemType;

  public static final String JSON_PROPERTY_COMPANY_ID = "company_id";
  private Integer companyId;

  public MailMessageItemForListAllOf1() {
  }

  public MailMessageItemForListAllOf1 nylasId(String nylasId) {
    
    this.nylasId = nylasId;
    return this;
  }

   /**
   * The Mail Message ID assigned by the sync provider
   * @return nylasId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Mail Message ID assigned by the sync provider")
  @JsonProperty(JSON_PROPERTY_NYLAS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNylasId() {
    return nylasId;
  }


  @JsonProperty(JSON_PROPERTY_NYLAS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNylasId(String nylasId) {
    this.nylasId = nylasId;
  }


  public MailMessageItemForListAllOf1 s3Bucket(String s3Bucket) {
    
    this.s3Bucket = s3Bucket;
    return this;
  }

   /**
   * The name of the S3 bucket
   * @return s3Bucket
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the S3 bucket")
  @JsonProperty(JSON_PROPERTY_S3_BUCKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getS3Bucket() {
    return s3Bucket;
  }


  @JsonProperty(JSON_PROPERTY_S3_BUCKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setS3Bucket(String s3Bucket) {
    this.s3Bucket = s3Bucket;
  }


  public MailMessageItemForListAllOf1 s3BucketPath(String s3BucketPath) {
    
    this.s3BucketPath = s3BucketPath;
    return this;
  }

   /**
   * The path of the S3 bucket
   * @return s3BucketPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path of the S3 bucket")
  @JsonProperty(JSON_PROPERTY_S3_BUCKET_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getS3BucketPath() {
    return s3BucketPath;
  }


  @JsonProperty(JSON_PROPERTY_S3_BUCKET_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setS3BucketPath(String s3BucketPath) {
    this.s3BucketPath = s3BucketPath;
  }


  public MailMessageItemForListAllOf1 externalDeletedFlag(Boolean externalDeletedFlag) {
    
    this.externalDeletedFlag = externalDeletedFlag;
    return this;
  }

   /**
   * If the Mail Message has been deleted on the provider side or not
   * @return externalDeletedFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the Mail Message has been deleted on the provider side or not")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_DELETED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExternalDeletedFlag() {
    return externalDeletedFlag;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_DELETED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalDeletedFlag(Boolean externalDeletedFlag) {
    this.externalDeletedFlag = externalDeletedFlag;
  }


  public MailMessageItemForListAllOf1 muaMessageId(String muaMessageId) {
    
    this.muaMessageId = muaMessageId;
    return this;
  }

   /**
   * The Mail Message ID assigned by the mail user agent
   * @return muaMessageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Mail Message ID assigned by the mail user agent")
  @JsonProperty(JSON_PROPERTY_MUA_MESSAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMuaMessageId() {
    return muaMessageId;
  }


  @JsonProperty(JSON_PROPERTY_MUA_MESSAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMuaMessageId(String muaMessageId) {
    this.muaMessageId = muaMessageId;
  }


  public MailMessageItemForListAllOf1 templateId(Integer templateId) {
    
    this.templateId = templateId;
    return this;
  }

   /**
   * The ID of the mail template
   * @return templateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the mail template")
  @JsonProperty(JSON_PROPERTY_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTemplateId() {
    return templateId;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplateId(Integer templateId) {
    this.templateId = templateId;
  }


  public MailMessageItemForListAllOf1 timestamp(String timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The add date and time of the Mail Message
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The add date and time of the Mail Message")
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimestamp() {
    return timestamp;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  public MailMessageItemForListAllOf1 itemType(String itemType) {
    
    this.itemType = itemType;
    return this;
  }

   /**
   * The type of the data item
   * @return itemType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the data item")
  @JsonProperty(JSON_PROPERTY_ITEM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getItemType() {
    return itemType;
  }


  @JsonProperty(JSON_PROPERTY_ITEM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemType(String itemType) {
    this.itemType = itemType;
  }


  public MailMessageItemForListAllOf1 companyId(Integer companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * The ID of the company
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the company")
  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCompanyId() {
    return companyId;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyId(Integer companyId) {
    this.companyId = companyId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MailMessageItemForListAllOf1 mailMessageItemForListAllOf1 = (MailMessageItemForListAllOf1) o;
    return Objects.equals(this.nylasId, mailMessageItemForListAllOf1.nylasId) &&
        Objects.equals(this.s3Bucket, mailMessageItemForListAllOf1.s3Bucket) &&
        Objects.equals(this.s3BucketPath, mailMessageItemForListAllOf1.s3BucketPath) &&
        Objects.equals(this.externalDeletedFlag, mailMessageItemForListAllOf1.externalDeletedFlag) &&
        Objects.equals(this.muaMessageId, mailMessageItemForListAllOf1.muaMessageId) &&
        Objects.equals(this.templateId, mailMessageItemForListAllOf1.templateId) &&
        Objects.equals(this.timestamp, mailMessageItemForListAllOf1.timestamp) &&
        Objects.equals(this.itemType, mailMessageItemForListAllOf1.itemType) &&
        Objects.equals(this.companyId, mailMessageItemForListAllOf1.companyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nylasId, s3Bucket, s3BucketPath, externalDeletedFlag, muaMessageId, templateId, timestamp, itemType, companyId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MailMessageItemForListAllOf1 {\n");
    sb.append("    nylasId: ").append(toIndentedString(nylasId)).append("\n");
    sb.append("    s3Bucket: ").append(toIndentedString(s3Bucket)).append("\n");
    sb.append("    s3BucketPath: ").append(toIndentedString(s3BucketPath)).append("\n");
    sb.append("    externalDeletedFlag: ").append(toIndentedString(externalDeletedFlag)).append("\n");
    sb.append("    muaMessageId: ").append(toIndentedString(muaMessageId)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

