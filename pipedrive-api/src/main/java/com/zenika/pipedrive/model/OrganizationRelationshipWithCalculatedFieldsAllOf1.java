/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OrganizationRelationshipWithCalculatedFieldsAllOf1
 */
@JsonPropertyOrder({
  OrganizationRelationshipWithCalculatedFieldsAllOf1.JSON_PROPERTY_CALCULATED_TYPE,
  OrganizationRelationshipWithCalculatedFieldsAllOf1.JSON_PROPERTY_CALCULATED_RELATED_ORG_ID
})
@JsonTypeName("organizationRelationshipWithCalculatedFields_allOf_1")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class OrganizationRelationshipWithCalculatedFieldsAllOf1 {
  public static final String JSON_PROPERTY_CALCULATED_TYPE = "calculated_type";
  private String calculatedType;

  public static final String JSON_PROPERTY_CALCULATED_RELATED_ORG_ID = "calculated_related_org_id";
  private Integer calculatedRelatedOrgId;

  public OrganizationRelationshipWithCalculatedFieldsAllOf1() {
  }

  public OrganizationRelationshipWithCalculatedFieldsAllOf1 calculatedType(String calculatedType) {
    
    this.calculatedType = calculatedType;
    return this;
  }

   /**
   * The calculated type of the relationship with the linked organization
   * @return calculatedType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The calculated type of the relationship with the linked organization")
  @JsonProperty(JSON_PROPERTY_CALCULATED_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCalculatedType() {
    return calculatedType;
  }


  @JsonProperty(JSON_PROPERTY_CALCULATED_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCalculatedType(String calculatedType) {
    this.calculatedType = calculatedType;
  }


  public OrganizationRelationshipWithCalculatedFieldsAllOf1 calculatedRelatedOrgId(Integer calculatedRelatedOrgId) {
    
    this.calculatedRelatedOrgId = calculatedRelatedOrgId;
    return this;
  }

   /**
   * The ID of the linked organization
   * @return calculatedRelatedOrgId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the linked organization")
  @JsonProperty(JSON_PROPERTY_CALCULATED_RELATED_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCalculatedRelatedOrgId() {
    return calculatedRelatedOrgId;
  }


  @JsonProperty(JSON_PROPERTY_CALCULATED_RELATED_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCalculatedRelatedOrgId(Integer calculatedRelatedOrgId) {
    this.calculatedRelatedOrgId = calculatedRelatedOrgId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationRelationshipWithCalculatedFieldsAllOf1 organizationRelationshipWithCalculatedFieldsAllOf1 = (OrganizationRelationshipWithCalculatedFieldsAllOf1) o;
    return Objects.equals(this.calculatedType, organizationRelationshipWithCalculatedFieldsAllOf1.calculatedType) &&
        Objects.equals(this.calculatedRelatedOrgId, organizationRelationshipWithCalculatedFieldsAllOf1.calculatedRelatedOrgId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(calculatedType, calculatedRelatedOrgId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationRelationshipWithCalculatedFieldsAllOf1 {\n");
    sb.append("    calculatedType: ").append(toIndentedString(calculatedType)).append("\n");
    sb.append("    calculatedRelatedOrgId: ").append(toIndentedString(calculatedRelatedOrgId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

