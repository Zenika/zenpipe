/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The user language details
 */
@ApiModel(description = "The user language details")
@JsonPropertyOrder({
  GetCurrentUserResponse200AllOfDataAllOfLanguage.JSON_PROPERTY_LANGUAGE_CODE,
  GetCurrentUserResponse200AllOfDataAllOfLanguage.JSON_PROPERTY_COUNTRY_CODE
})
@JsonTypeName("getCurrentUserResponse200_allOf_data_allOf_language")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class GetCurrentUserResponse200AllOfDataAllOfLanguage {
  public static final String JSON_PROPERTY_LANGUAGE_CODE = "language_code";
  private String languageCode;

  public static final String JSON_PROPERTY_COUNTRY_CODE = "country_code";
  private String countryCode;

  public GetCurrentUserResponse200AllOfDataAllOfLanguage() {
  }

  public GetCurrentUserResponse200AllOfDataAllOfLanguage languageCode(String languageCode) {
    
    this.languageCode = languageCode;
    return this;
  }

   /**
   * The language code. E.g. en
   * @return languageCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The language code. E.g. en")
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanguageCode() {
    return languageCode;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GetCurrentUserResponse200AllOfDataAllOfLanguage countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * The country code. E.g. US
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The country code. E.g. US")
  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountryCode() {
    return countryCode;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCurrentUserResponse200AllOfDataAllOfLanguage getCurrentUserResponse200AllOfDataAllOfLanguage = (GetCurrentUserResponse200AllOfDataAllOfLanguage) o;
    return Objects.equals(this.languageCode, getCurrentUserResponse200AllOfDataAllOfLanguage.languageCode) &&
        Objects.equals(this.countryCode, getCurrentUserResponse200AllOfDataAllOfLanguage.countryCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(languageCode, countryCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCurrentUserResponse200AllOfDataAllOfLanguage {\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

