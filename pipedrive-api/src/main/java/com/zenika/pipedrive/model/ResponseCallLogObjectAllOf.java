/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ResponseCallLogObjectAllOf
 */
@JsonPropertyOrder({
  ResponseCallLogObjectAllOf.JSON_PROPERTY_ID,
  ResponseCallLogObjectAllOf.JSON_PROPERTY_HAS_RECORDING,
  ResponseCallLogObjectAllOf.JSON_PROPERTY_COMPANY_ID
})
@JsonTypeName("responseCallLogObject_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class ResponseCallLogObjectAllOf {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_HAS_RECORDING = "has_recording";
  private Boolean hasRecording;

  public static final String JSON_PROPERTY_COMPANY_ID = "company_id";
  private Integer companyId;

  public ResponseCallLogObjectAllOf() {
  }

  public ResponseCallLogObjectAllOf id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The call log ID, generated when the call log was created
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The call log ID, generated when the call log was created")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ResponseCallLogObjectAllOf hasRecording(Boolean hasRecording) {
    
    this.hasRecording = hasRecording;
    return this;
  }

   /**
   * If the call log has an audio recording attached, the value should be true
   * @return hasRecording
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the call log has an audio recording attached, the value should be true")
  @JsonProperty(JSON_PROPERTY_HAS_RECORDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasRecording() {
    return hasRecording;
  }


  @JsonProperty(JSON_PROPERTY_HAS_RECORDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasRecording(Boolean hasRecording) {
    this.hasRecording = hasRecording;
  }


  public ResponseCallLogObjectAllOf companyId(Integer companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * The company ID of the owner of the call log
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The company ID of the owner of the call log")
  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCompanyId() {
    return companyId;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyId(Integer companyId) {
    this.companyId = companyId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseCallLogObjectAllOf responseCallLogObjectAllOf = (ResponseCallLogObjectAllOf) o;
    return Objects.equals(this.id, responseCallLogObjectAllOf.id) &&
        Objects.equals(this.hasRecording, responseCallLogObjectAllOf.hasRecording) &&
        Objects.equals(this.companyId, responseCallLogObjectAllOf.companyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, hasRecording, companyId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseCallLogObjectAllOf {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    hasRecording: ").append(toIndentedString(hasRecording)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

