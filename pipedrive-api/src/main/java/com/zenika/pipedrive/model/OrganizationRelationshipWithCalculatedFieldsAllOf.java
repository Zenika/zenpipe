/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zenika.pipedrive.model.RelationshipOrganizationInfoItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OrganizationRelationshipWithCalculatedFieldsAllOf
 */
@JsonPropertyOrder({
  OrganizationRelationshipWithCalculatedFieldsAllOf.JSON_PROPERTY_ID,
  OrganizationRelationshipWithCalculatedFieldsAllOf.JSON_PROPERTY_TYPE,
  OrganizationRelationshipWithCalculatedFieldsAllOf.JSON_PROPERTY_REL_OWNER_ORG_ID,
  OrganizationRelationshipWithCalculatedFieldsAllOf.JSON_PROPERTY_REL_LINKED_ORG_ID,
  OrganizationRelationshipWithCalculatedFieldsAllOf.JSON_PROPERTY_ADD_TIME,
  OrganizationRelationshipWithCalculatedFieldsAllOf.JSON_PROPERTY_UPDATE_TIME,
  OrganizationRelationshipWithCalculatedFieldsAllOf.JSON_PROPERTY_ACTIVE_FLAG
})
@JsonTypeName("organizationRelationshipWithCalculatedFields_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class OrganizationRelationshipWithCalculatedFieldsAllOf {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_REL_OWNER_ORG_ID = "rel_owner_org_id";
  private RelationshipOrganizationInfoItem relOwnerOrgId;

  public static final String JSON_PROPERTY_REL_LINKED_ORG_ID = "rel_linked_org_id";
  private RelationshipOrganizationInfoItem relLinkedOrgId;

  public static final String JSON_PROPERTY_ADD_TIME = "add_time";
  private String addTime;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  private String updateTime;

  public static final String JSON_PROPERTY_ACTIVE_FLAG = "active_flag";
  private String activeFlag;

  public OrganizationRelationshipWithCalculatedFieldsAllOf() {
  }

  public OrganizationRelationshipWithCalculatedFieldsAllOf id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the organization relationship
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the organization relationship")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public OrganizationRelationshipWithCalculatedFieldsAllOf type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of the relationship
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the relationship")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public OrganizationRelationshipWithCalculatedFieldsAllOf relOwnerOrgId(RelationshipOrganizationInfoItem relOwnerOrgId) {
    
    this.relOwnerOrgId = relOwnerOrgId;
    return this;
  }

   /**
   * Get relOwnerOrgId
   * @return relOwnerOrgId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REL_OWNER_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RelationshipOrganizationInfoItem getRelOwnerOrgId() {
    return relOwnerOrgId;
  }


  @JsonProperty(JSON_PROPERTY_REL_OWNER_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelOwnerOrgId(RelationshipOrganizationInfoItem relOwnerOrgId) {
    this.relOwnerOrgId = relOwnerOrgId;
  }


  public OrganizationRelationshipWithCalculatedFieldsAllOf relLinkedOrgId(RelationshipOrganizationInfoItem relLinkedOrgId) {
    
    this.relLinkedOrgId = relLinkedOrgId;
    return this;
  }

   /**
   * Get relLinkedOrgId
   * @return relLinkedOrgId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REL_LINKED_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RelationshipOrganizationInfoItem getRelLinkedOrgId() {
    return relLinkedOrgId;
  }


  @JsonProperty(JSON_PROPERTY_REL_LINKED_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelLinkedOrgId(RelationshipOrganizationInfoItem relLinkedOrgId) {
    this.relLinkedOrgId = relLinkedOrgId;
  }


  public OrganizationRelationshipWithCalculatedFieldsAllOf addTime(String addTime) {
    
    this.addTime = addTime;
    return this;
  }

   /**
   * The creation date and time of the relationship
   * @return addTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The creation date and time of the relationship")
  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddTime() {
    return addTime;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddTime(String addTime) {
    this.addTime = addTime;
  }


  public OrganizationRelationshipWithCalculatedFieldsAllOf updateTime(String updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * The last updated date and time of the relationship
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The last updated date and time of the relationship")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  public OrganizationRelationshipWithCalculatedFieldsAllOf activeFlag(String activeFlag) {
    
    this.activeFlag = activeFlag;
    return this;
  }

   /**
   * Whether the relationship is active or not
   * @return activeFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the relationship is active or not")
  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActiveFlag() {
    return activeFlag;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveFlag(String activeFlag) {
    this.activeFlag = activeFlag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationRelationshipWithCalculatedFieldsAllOf organizationRelationshipWithCalculatedFieldsAllOf = (OrganizationRelationshipWithCalculatedFieldsAllOf) o;
    return Objects.equals(this.id, organizationRelationshipWithCalculatedFieldsAllOf.id) &&
        Objects.equals(this.type, organizationRelationshipWithCalculatedFieldsAllOf.type) &&
        Objects.equals(this.relOwnerOrgId, organizationRelationshipWithCalculatedFieldsAllOf.relOwnerOrgId) &&
        Objects.equals(this.relLinkedOrgId, organizationRelationshipWithCalculatedFieldsAllOf.relLinkedOrgId) &&
        Objects.equals(this.addTime, organizationRelationshipWithCalculatedFieldsAllOf.addTime) &&
        Objects.equals(this.updateTime, organizationRelationshipWithCalculatedFieldsAllOf.updateTime) &&
        Objects.equals(this.activeFlag, organizationRelationshipWithCalculatedFieldsAllOf.activeFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, relOwnerOrgId, relLinkedOrgId, addTime, updateTime, activeFlag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationRelationshipWithCalculatedFieldsAllOf {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    relOwnerOrgId: ").append(toIndentedString(relOwnerOrgId)).append("\n");
    sb.append("    relLinkedOrgId: ").append(toIndentedString(relLinkedOrgId)).append("\n");
    sb.append("    addTime: ").append(toIndentedString(addTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    activeFlag: ").append(toIndentedString(activeFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

