/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NoteRequestAllOf1
 */
@JsonPropertyOrder({
  NoteRequestAllOf1.JSON_PROPERTY_LEAD_ID,
  NoteRequestAllOf1.JSON_PROPERTY_DEAL_ID,
  NoteRequestAllOf1.JSON_PROPERTY_PERSON_ID,
  NoteRequestAllOf1.JSON_PROPERTY_ORG_ID
})
@JsonTypeName("noteRequest_allOf_1")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class NoteRequestAllOf1 {
  public static final String JSON_PROPERTY_LEAD_ID = "lead_id";
  private UUID leadId;

  public static final String JSON_PROPERTY_DEAL_ID = "deal_id";
  private Integer dealId;

  public static final String JSON_PROPERTY_PERSON_ID = "person_id";
  private Integer personId;

  public static final String JSON_PROPERTY_ORG_ID = "org_id";
  private Integer orgId;

  public NoteRequestAllOf1() {
  }

  public NoteRequestAllOf1 leadId(UUID leadId) {
    
    this.leadId = leadId;
    return this;
  }

   /**
   * The ID of the lead the note will be attached to
   * @return leadId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the lead the note will be attached to")
  @JsonProperty(JSON_PROPERTY_LEAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getLeadId() {
    return leadId;
  }


  @JsonProperty(JSON_PROPERTY_LEAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeadId(UUID leadId) {
    this.leadId = leadId;
  }


  public NoteRequestAllOf1 dealId(Integer dealId) {
    
    this.dealId = dealId;
    return this;
  }

   /**
   * The ID of the deal the note will be attached to
   * @return dealId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the deal the note will be attached to")
  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDealId() {
    return dealId;
  }


  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDealId(Integer dealId) {
    this.dealId = dealId;
  }


  public NoteRequestAllOf1 personId(Integer personId) {
    
    this.personId = personId;
    return this;
  }

   /**
   * The ID of the person the note will be attached to
   * @return personId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the person the note will be attached to")
  @JsonProperty(JSON_PROPERTY_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPersonId() {
    return personId;
  }


  @JsonProperty(JSON_PROPERTY_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonId(Integer personId) {
    this.personId = personId;
  }


  public NoteRequestAllOf1 orgId(Integer orgId) {
    
    this.orgId = orgId;
    return this;
  }

   /**
   * The ID of the organization the note will be attached to
   * @return orgId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the organization the note will be attached to")
  @JsonProperty(JSON_PROPERTY_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrgId() {
    return orgId;
  }


  @JsonProperty(JSON_PROPERTY_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrgId(Integer orgId) {
    this.orgId = orgId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NoteRequestAllOf1 noteRequestAllOf1 = (NoteRequestAllOf1) o;
    return Objects.equals(this.leadId, noteRequestAllOf1.leadId) &&
        Objects.equals(this.dealId, noteRequestAllOf1.dealId) &&
        Objects.equals(this.personId, noteRequestAllOf1.personId) &&
        Objects.equals(this.orgId, noteRequestAllOf1.orgId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(leadId, dealId, personId, orgId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NoteRequestAllOf1 {\n");
    sb.append("    leadId: ").append(toIndentedString(leadId)).append("\n");
    sb.append("    dealId: ").append(toIndentedString(dealId)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

