/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zenika.pipedrive.model.BaseMailThreadAllOf1Parties;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The mail thread object
 */
@ApiModel(description = "The mail thread object")
@JsonPropertyOrder({
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_ID,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_ACCOUNT_ID,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_USER_ID,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_SUBJECT,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_SNIPPET,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_READ_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_MAIL_TRACKING_STATUS,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_HAS_ATTACHMENTS_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_HAS_INLINE_ATTACHMENTS_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_HAS_REAL_ATTACHMENTS_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_DELETED_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_SYNCED_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_SMART_BCC_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_MAIL_LINK_TRACKING_ENABLED_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_PARTIES,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_DRAFTS_PARTIES,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_FOLDERS,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_VERSION,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_SNIPPET_DRAFT,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_SNIPPET_SENT,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_MESSAGE_COUNT,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_HAS_DRAFT_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_HAS_SENT_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_ARCHIVED_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_SHARED_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_EXTERNAL_DELETED_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_FIRST_MESSAGE_TO_ME_FLAG,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_LAST_MESSAGE_TIMESTAMP,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_FIRST_MESSAGE_TIMESTAMP,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_LAST_MESSAGE_SENT_TIMESTAMP,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_LAST_MESSAGE_RECEIVED_TIMESTAMP,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_ADD_TIME,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_UPDATE_TIME,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_DEAL_ID,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_DEAL_STATUS,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_LEAD_ID,
  GetOneMailThreadResponse200AllOfData.JSON_PROPERTY_ALL_MESSAGES_SENT_FLAG
})
@JsonTypeName("getOneMailThreadResponse200_allOf_data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class GetOneMailThreadResponse200AllOfData {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_ACCOUNT_ID = "account_id";
  private String accountId;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private Integer userId;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private String subject;

  public static final String JSON_PROPERTY_SNIPPET = "snippet";
  private String snippet;

  /**
   * Gets or Sets readFlag
   */
  public enum ReadFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    ReadFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReadFlagEnum fromValue(BigDecimal value) {
      for (ReadFlagEnum b : ReadFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_READ_FLAG = "read_flag";
  private ReadFlagEnum readFlag = ReadFlagEnum.NUMBER_0;

  public static final String JSON_PROPERTY_MAIL_TRACKING_STATUS = "mail_tracking_status";
  private JsonNullable<String> mailTrackingStatus = JsonNullable.<String>undefined();

  /**
   * Gets or Sets hasAttachmentsFlag
   */
  public enum HasAttachmentsFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    HasAttachmentsFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HasAttachmentsFlagEnum fromValue(BigDecimal value) {
      for (HasAttachmentsFlagEnum b : HasAttachmentsFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_HAS_ATTACHMENTS_FLAG = "has_attachments_flag";
  private HasAttachmentsFlagEnum hasAttachmentsFlag = HasAttachmentsFlagEnum.NUMBER_0;

  /**
   * Gets or Sets hasInlineAttachmentsFlag
   */
  public enum HasInlineAttachmentsFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    HasInlineAttachmentsFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HasInlineAttachmentsFlagEnum fromValue(BigDecimal value) {
      for (HasInlineAttachmentsFlagEnum b : HasInlineAttachmentsFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_HAS_INLINE_ATTACHMENTS_FLAG = "has_inline_attachments_flag";
  private HasInlineAttachmentsFlagEnum hasInlineAttachmentsFlag = HasInlineAttachmentsFlagEnum.NUMBER_0;

  /**
   * Gets or Sets hasRealAttachmentsFlag
   */
  public enum HasRealAttachmentsFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    HasRealAttachmentsFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HasRealAttachmentsFlagEnum fromValue(BigDecimal value) {
      for (HasRealAttachmentsFlagEnum b : HasRealAttachmentsFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_HAS_REAL_ATTACHMENTS_FLAG = "has_real_attachments_flag";
  private HasRealAttachmentsFlagEnum hasRealAttachmentsFlag = HasRealAttachmentsFlagEnum.NUMBER_0;

  /**
   * Gets or Sets deletedFlag
   */
  public enum DeletedFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    DeletedFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DeletedFlagEnum fromValue(BigDecimal value) {
      for (DeletedFlagEnum b : DeletedFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DELETED_FLAG = "deleted_flag";
  private DeletedFlagEnum deletedFlag = DeletedFlagEnum.NUMBER_0;

  /**
   * Gets or Sets syncedFlag
   */
  public enum SyncedFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    SyncedFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SyncedFlagEnum fromValue(BigDecimal value) {
      for (SyncedFlagEnum b : SyncedFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SYNCED_FLAG = "synced_flag";
  private SyncedFlagEnum syncedFlag = SyncedFlagEnum.NUMBER_0;

  /**
   * Gets or Sets smartBccFlag
   */
  public enum SmartBccFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    SmartBccFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SmartBccFlagEnum fromValue(BigDecimal value) {
      for (SmartBccFlagEnum b : SmartBccFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SMART_BCC_FLAG = "smart_bcc_flag";
  private SmartBccFlagEnum smartBccFlag = SmartBccFlagEnum.NUMBER_0;

  /**
   * Gets or Sets mailLinkTrackingEnabledFlag
   */
  public enum MailLinkTrackingEnabledFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    MailLinkTrackingEnabledFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MailLinkTrackingEnabledFlagEnum fromValue(BigDecimal value) {
      for (MailLinkTrackingEnabledFlagEnum b : MailLinkTrackingEnabledFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MAIL_LINK_TRACKING_ENABLED_FLAG = "mail_link_tracking_enabled_flag";
  private MailLinkTrackingEnabledFlagEnum mailLinkTrackingEnabledFlag = MailLinkTrackingEnabledFlagEnum.NUMBER_0;

  public static final String JSON_PROPERTY_PARTIES = "parties";
  private BaseMailThreadAllOf1Parties parties;

  public static final String JSON_PROPERTY_DRAFTS_PARTIES = "drafts_parties";
  private List<Object> draftsParties = null;

  public static final String JSON_PROPERTY_FOLDERS = "folders";
  private List<String> folders = null;

  public static final String JSON_PROPERTY_VERSION = "version";
  private BigDecimal version;

  public static final String JSON_PROPERTY_SNIPPET_DRAFT = "snippet_draft";
  private JsonNullable<String> snippetDraft = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SNIPPET_SENT = "snippet_sent";
  private String snippetSent;

  public static final String JSON_PROPERTY_MESSAGE_COUNT = "message_count";
  private Integer messageCount;

  /**
   * Gets or Sets hasDraftFlag
   */
  public enum HasDraftFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    HasDraftFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HasDraftFlagEnum fromValue(BigDecimal value) {
      for (HasDraftFlagEnum b : HasDraftFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_HAS_DRAFT_FLAG = "has_draft_flag";
  private HasDraftFlagEnum hasDraftFlag = HasDraftFlagEnum.NUMBER_0;

  /**
   * Gets or Sets hasSentFlag
   */
  public enum HasSentFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    HasSentFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HasSentFlagEnum fromValue(BigDecimal value) {
      for (HasSentFlagEnum b : HasSentFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_HAS_SENT_FLAG = "has_sent_flag";
  private HasSentFlagEnum hasSentFlag = HasSentFlagEnum.NUMBER_0;

  /**
   * Gets or Sets archivedFlag
   */
  public enum ArchivedFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    ArchivedFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ArchivedFlagEnum fromValue(BigDecimal value) {
      for (ArchivedFlagEnum b : ArchivedFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ARCHIVED_FLAG = "archived_flag";
  private ArchivedFlagEnum archivedFlag = ArchivedFlagEnum.NUMBER_0;

  /**
   * Gets or Sets sharedFlag
   */
  public enum SharedFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    SharedFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SharedFlagEnum fromValue(BigDecimal value) {
      for (SharedFlagEnum b : SharedFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SHARED_FLAG = "shared_flag";
  private SharedFlagEnum sharedFlag = SharedFlagEnum.NUMBER_0;

  /**
   * Gets or Sets externalDeletedFlag
   */
  public enum ExternalDeletedFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    ExternalDeletedFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExternalDeletedFlagEnum fromValue(BigDecimal value) {
      for (ExternalDeletedFlagEnum b : ExternalDeletedFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EXTERNAL_DELETED_FLAG = "external_deleted_flag";
  private ExternalDeletedFlagEnum externalDeletedFlag = ExternalDeletedFlagEnum.NUMBER_0;

  /**
   * Gets or Sets firstMessageToMeFlag
   */
  public enum FirstMessageToMeFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    FirstMessageToMeFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FirstMessageToMeFlagEnum fromValue(BigDecimal value) {
      for (FirstMessageToMeFlagEnum b : FirstMessageToMeFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FIRST_MESSAGE_TO_ME_FLAG = "first_message_to_me_flag";
  private FirstMessageToMeFlagEnum firstMessageToMeFlag = FirstMessageToMeFlagEnum.NUMBER_0;

  public static final String JSON_PROPERTY_LAST_MESSAGE_TIMESTAMP = "last_message_timestamp";
  private OffsetDateTime lastMessageTimestamp;

  public static final String JSON_PROPERTY_FIRST_MESSAGE_TIMESTAMP = "first_message_timestamp";
  private OffsetDateTime firstMessageTimestamp;

  public static final String JSON_PROPERTY_LAST_MESSAGE_SENT_TIMESTAMP = "last_message_sent_timestamp";
  private JsonNullable<OffsetDateTime> lastMessageSentTimestamp = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_LAST_MESSAGE_RECEIVED_TIMESTAMP = "last_message_received_timestamp";
  private OffsetDateTime lastMessageReceivedTimestamp;

  public static final String JSON_PROPERTY_ADD_TIME = "add_time";
  private OffsetDateTime addTime;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  private OffsetDateTime updateTime;

  public static final String JSON_PROPERTY_DEAL_ID = "deal_id";
  private JsonNullable<Integer> dealId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_DEAL_STATUS = "deal_status";
  private JsonNullable<String> dealStatus = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LEAD_ID = "lead_id";
  private JsonNullable<UUID> leadId = JsonNullable.<UUID>undefined();

  /**
   * Gets or Sets allMessagesSentFlag
   */
  public enum AllMessagesSentFlagEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    AllMessagesSentFlagEnum(BigDecimal value) {
      this.value = value;
    }

    @JsonValue
    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AllMessagesSentFlagEnum fromValue(BigDecimal value) {
      for (AllMessagesSentFlagEnum b : AllMessagesSentFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ALL_MESSAGES_SENT_FLAG = "all_messages_sent_flag";
  private AllMessagesSentFlagEnum allMessagesSentFlag = AllMessagesSentFlagEnum.NUMBER_0;

  public GetOneMailThreadResponse200AllOfData() {
  }

  public GetOneMailThreadResponse200AllOfData id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * ID of the mail thread
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the mail thread")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public GetOneMailThreadResponse200AllOfData accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * The connection account ID
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The connection account ID")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public GetOneMailThreadResponse200AllOfData userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * ID of the user whom mail message will be assigned to
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the user whom mail message will be assigned to")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public GetOneMailThreadResponse200AllOfData subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * The subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The subject")
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubject(String subject) {
    this.subject = subject;
  }


  public GetOneMailThreadResponse200AllOfData snippet(String snippet) {
    
    this.snippet = snippet;
    return this;
  }

   /**
   * A snippet
   * @return snippet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A snippet")
  @JsonProperty(JSON_PROPERTY_SNIPPET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSnippet() {
    return snippet;
  }


  @JsonProperty(JSON_PROPERTY_SNIPPET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSnippet(String snippet) {
    this.snippet = snippet;
  }


  public GetOneMailThreadResponse200AllOfData readFlag(ReadFlagEnum readFlag) {
    
    this.readFlag = readFlag;
    return this;
  }

   /**
   * Get readFlag
   * @return readFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_READ_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReadFlagEnum getReadFlag() {
    return readFlag;
  }


  @JsonProperty(JSON_PROPERTY_READ_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReadFlag(ReadFlagEnum readFlag) {
    this.readFlag = readFlag;
  }


  public GetOneMailThreadResponse200AllOfData mailTrackingStatus(String mailTrackingStatus) {
    this.mailTrackingStatus = JsonNullable.<String>of(mailTrackingStatus);
    
    return this;
  }

   /**
   * Mail tracking status
   * @return mailTrackingStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Mail tracking status")
  @JsonIgnore

  public String getMailTrackingStatus() {
        return mailTrackingStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAIL_TRACKING_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMailTrackingStatus_JsonNullable() {
    return mailTrackingStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_MAIL_TRACKING_STATUS)
  public void setMailTrackingStatus_JsonNullable(JsonNullable<String> mailTrackingStatus) {
    this.mailTrackingStatus = mailTrackingStatus;
  }

  public void setMailTrackingStatus(String mailTrackingStatus) {
    this.mailTrackingStatus = JsonNullable.<String>of(mailTrackingStatus);
  }


  public GetOneMailThreadResponse200AllOfData hasAttachmentsFlag(HasAttachmentsFlagEnum hasAttachmentsFlag) {
    
    this.hasAttachmentsFlag = hasAttachmentsFlag;
    return this;
  }

   /**
   * Get hasAttachmentsFlag
   * @return hasAttachmentsFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HAS_ATTACHMENTS_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HasAttachmentsFlagEnum getHasAttachmentsFlag() {
    return hasAttachmentsFlag;
  }


  @JsonProperty(JSON_PROPERTY_HAS_ATTACHMENTS_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasAttachmentsFlag(HasAttachmentsFlagEnum hasAttachmentsFlag) {
    this.hasAttachmentsFlag = hasAttachmentsFlag;
  }


  public GetOneMailThreadResponse200AllOfData hasInlineAttachmentsFlag(HasInlineAttachmentsFlagEnum hasInlineAttachmentsFlag) {
    
    this.hasInlineAttachmentsFlag = hasInlineAttachmentsFlag;
    return this;
  }

   /**
   * Get hasInlineAttachmentsFlag
   * @return hasInlineAttachmentsFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HAS_INLINE_ATTACHMENTS_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HasInlineAttachmentsFlagEnum getHasInlineAttachmentsFlag() {
    return hasInlineAttachmentsFlag;
  }


  @JsonProperty(JSON_PROPERTY_HAS_INLINE_ATTACHMENTS_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasInlineAttachmentsFlag(HasInlineAttachmentsFlagEnum hasInlineAttachmentsFlag) {
    this.hasInlineAttachmentsFlag = hasInlineAttachmentsFlag;
  }


  public GetOneMailThreadResponse200AllOfData hasRealAttachmentsFlag(HasRealAttachmentsFlagEnum hasRealAttachmentsFlag) {
    
    this.hasRealAttachmentsFlag = hasRealAttachmentsFlag;
    return this;
  }

   /**
   * Get hasRealAttachmentsFlag
   * @return hasRealAttachmentsFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HAS_REAL_ATTACHMENTS_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HasRealAttachmentsFlagEnum getHasRealAttachmentsFlag() {
    return hasRealAttachmentsFlag;
  }


  @JsonProperty(JSON_PROPERTY_HAS_REAL_ATTACHMENTS_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasRealAttachmentsFlag(HasRealAttachmentsFlagEnum hasRealAttachmentsFlag) {
    this.hasRealAttachmentsFlag = hasRealAttachmentsFlag;
  }


  public GetOneMailThreadResponse200AllOfData deletedFlag(DeletedFlagEnum deletedFlag) {
    
    this.deletedFlag = deletedFlag;
    return this;
  }

   /**
   * Get deletedFlag
   * @return deletedFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELETED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeletedFlagEnum getDeletedFlag() {
    return deletedFlag;
  }


  @JsonProperty(JSON_PROPERTY_DELETED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeletedFlag(DeletedFlagEnum deletedFlag) {
    this.deletedFlag = deletedFlag;
  }


  public GetOneMailThreadResponse200AllOfData syncedFlag(SyncedFlagEnum syncedFlag) {
    
    this.syncedFlag = syncedFlag;
    return this;
  }

   /**
   * Get syncedFlag
   * @return syncedFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SYNCED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SyncedFlagEnum getSyncedFlag() {
    return syncedFlag;
  }


  @JsonProperty(JSON_PROPERTY_SYNCED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSyncedFlag(SyncedFlagEnum syncedFlag) {
    this.syncedFlag = syncedFlag;
  }


  public GetOneMailThreadResponse200AllOfData smartBccFlag(SmartBccFlagEnum smartBccFlag) {
    
    this.smartBccFlag = smartBccFlag;
    return this;
  }

   /**
   * Get smartBccFlag
   * @return smartBccFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SMART_BCC_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SmartBccFlagEnum getSmartBccFlag() {
    return smartBccFlag;
  }


  @JsonProperty(JSON_PROPERTY_SMART_BCC_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSmartBccFlag(SmartBccFlagEnum smartBccFlag) {
    this.smartBccFlag = smartBccFlag;
  }


  public GetOneMailThreadResponse200AllOfData mailLinkTrackingEnabledFlag(MailLinkTrackingEnabledFlagEnum mailLinkTrackingEnabledFlag) {
    
    this.mailLinkTrackingEnabledFlag = mailLinkTrackingEnabledFlag;
    return this;
  }

   /**
   * Get mailLinkTrackingEnabledFlag
   * @return mailLinkTrackingEnabledFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAIL_LINK_TRACKING_ENABLED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MailLinkTrackingEnabledFlagEnum getMailLinkTrackingEnabledFlag() {
    return mailLinkTrackingEnabledFlag;
  }


  @JsonProperty(JSON_PROPERTY_MAIL_LINK_TRACKING_ENABLED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMailLinkTrackingEnabledFlag(MailLinkTrackingEnabledFlagEnum mailLinkTrackingEnabledFlag) {
    this.mailLinkTrackingEnabledFlag = mailLinkTrackingEnabledFlag;
  }


  public GetOneMailThreadResponse200AllOfData parties(BaseMailThreadAllOf1Parties parties) {
    
    this.parties = parties;
    return this;
  }

   /**
   * Get parties
   * @return parties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BaseMailThreadAllOf1Parties getParties() {
    return parties;
  }


  @JsonProperty(JSON_PROPERTY_PARTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParties(BaseMailThreadAllOf1Parties parties) {
    this.parties = parties;
  }


  public GetOneMailThreadResponse200AllOfData draftsParties(List<Object> draftsParties) {
    
    this.draftsParties = draftsParties;
    return this;
  }

  public GetOneMailThreadResponse200AllOfData addDraftsPartiesItem(Object draftsPartiesItem) {
    if (this.draftsParties == null) {
      this.draftsParties = new ArrayList<>();
    }
    this.draftsParties.add(draftsPartiesItem);
    return this;
  }

   /**
   * Parties of the drafted mail thread
   * @return draftsParties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parties of the drafted mail thread")
  @JsonProperty(JSON_PROPERTY_DRAFTS_PARTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getDraftsParties() {
    return draftsParties;
  }


  @JsonProperty(JSON_PROPERTY_DRAFTS_PARTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDraftsParties(List<Object> draftsParties) {
    this.draftsParties = draftsParties;
  }


  public GetOneMailThreadResponse200AllOfData folders(List<String> folders) {
    
    this.folders = folders;
    return this;
  }

  public GetOneMailThreadResponse200AllOfData addFoldersItem(String foldersItem) {
    if (this.folders == null) {
      this.folders = new ArrayList<>();
    }
    this.folders.add(foldersItem);
    return this;
  }

   /**
   * Folders in which messages from thread are being stored
   * @return folders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Folders in which messages from thread are being stored")
  @JsonProperty(JSON_PROPERTY_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFolders() {
    return folders;
  }


  @JsonProperty(JSON_PROPERTY_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFolders(List<String> folders) {
    this.folders = folders;
  }


  public GetOneMailThreadResponse200AllOfData version(BigDecimal version) {
    
    this.version = version;
    return this;
  }

   /**
   * Version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Version")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(BigDecimal version) {
    this.version = version;
  }


  public GetOneMailThreadResponse200AllOfData snippetDraft(String snippetDraft) {
    this.snippetDraft = JsonNullable.<String>of(snippetDraft);
    
    return this;
  }

   /**
   * A snippet from a draft
   * @return snippetDraft
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A snippet from a draft")
  @JsonIgnore

  public String getSnippetDraft() {
        return snippetDraft.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SNIPPET_DRAFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSnippetDraft_JsonNullable() {
    return snippetDraft;
  }
  
  @JsonProperty(JSON_PROPERTY_SNIPPET_DRAFT)
  public void setSnippetDraft_JsonNullable(JsonNullable<String> snippetDraft) {
    this.snippetDraft = snippetDraft;
  }

  public void setSnippetDraft(String snippetDraft) {
    this.snippetDraft = JsonNullable.<String>of(snippetDraft);
  }


  public GetOneMailThreadResponse200AllOfData snippetSent(String snippetSent) {
    
    this.snippetSent = snippetSent;
    return this;
  }

   /**
   * A snippet from a message sent
   * @return snippetSent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A snippet from a message sent")
  @JsonProperty(JSON_PROPERTY_SNIPPET_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSnippetSent() {
    return snippetSent;
  }


  @JsonProperty(JSON_PROPERTY_SNIPPET_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSnippetSent(String snippetSent) {
    this.snippetSent = snippetSent;
  }


  public GetOneMailThreadResponse200AllOfData messageCount(Integer messageCount) {
    
    this.messageCount = messageCount;
    return this;
  }

   /**
   * An amount of messages
   * @return messageCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An amount of messages")
  @JsonProperty(JSON_PROPERTY_MESSAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMessageCount() {
    return messageCount;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageCount(Integer messageCount) {
    this.messageCount = messageCount;
  }


  public GetOneMailThreadResponse200AllOfData hasDraftFlag(HasDraftFlagEnum hasDraftFlag) {
    
    this.hasDraftFlag = hasDraftFlag;
    return this;
  }

   /**
   * Get hasDraftFlag
   * @return hasDraftFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HAS_DRAFT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HasDraftFlagEnum getHasDraftFlag() {
    return hasDraftFlag;
  }


  @JsonProperty(JSON_PROPERTY_HAS_DRAFT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasDraftFlag(HasDraftFlagEnum hasDraftFlag) {
    this.hasDraftFlag = hasDraftFlag;
  }


  public GetOneMailThreadResponse200AllOfData hasSentFlag(HasSentFlagEnum hasSentFlag) {
    
    this.hasSentFlag = hasSentFlag;
    return this;
  }

   /**
   * Get hasSentFlag
   * @return hasSentFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HAS_SENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HasSentFlagEnum getHasSentFlag() {
    return hasSentFlag;
  }


  @JsonProperty(JSON_PROPERTY_HAS_SENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasSentFlag(HasSentFlagEnum hasSentFlag) {
    this.hasSentFlag = hasSentFlag;
  }


  public GetOneMailThreadResponse200AllOfData archivedFlag(ArchivedFlagEnum archivedFlag) {
    
    this.archivedFlag = archivedFlag;
    return this;
  }

   /**
   * Get archivedFlag
   * @return archivedFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ARCHIVED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ArchivedFlagEnum getArchivedFlag() {
    return archivedFlag;
  }


  @JsonProperty(JSON_PROPERTY_ARCHIVED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArchivedFlag(ArchivedFlagEnum archivedFlag) {
    this.archivedFlag = archivedFlag;
  }


  public GetOneMailThreadResponse200AllOfData sharedFlag(SharedFlagEnum sharedFlag) {
    
    this.sharedFlag = sharedFlag;
    return this;
  }

   /**
   * Get sharedFlag
   * @return sharedFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SHARED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SharedFlagEnum getSharedFlag() {
    return sharedFlag;
  }


  @JsonProperty(JSON_PROPERTY_SHARED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharedFlag(SharedFlagEnum sharedFlag) {
    this.sharedFlag = sharedFlag;
  }


  public GetOneMailThreadResponse200AllOfData externalDeletedFlag(ExternalDeletedFlagEnum externalDeletedFlag) {
    
    this.externalDeletedFlag = externalDeletedFlag;
    return this;
  }

   /**
   * Get externalDeletedFlag
   * @return externalDeletedFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_DELETED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExternalDeletedFlagEnum getExternalDeletedFlag() {
    return externalDeletedFlag;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_DELETED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalDeletedFlag(ExternalDeletedFlagEnum externalDeletedFlag) {
    this.externalDeletedFlag = externalDeletedFlag;
  }


  public GetOneMailThreadResponse200AllOfData firstMessageToMeFlag(FirstMessageToMeFlagEnum firstMessageToMeFlag) {
    
    this.firstMessageToMeFlag = firstMessageToMeFlag;
    return this;
  }

   /**
   * Get firstMessageToMeFlag
   * @return firstMessageToMeFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FIRST_MESSAGE_TO_ME_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FirstMessageToMeFlagEnum getFirstMessageToMeFlag() {
    return firstMessageToMeFlag;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_MESSAGE_TO_ME_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstMessageToMeFlag(FirstMessageToMeFlagEnum firstMessageToMeFlag) {
    this.firstMessageToMeFlag = firstMessageToMeFlag;
  }


  public GetOneMailThreadResponse200AllOfData lastMessageTimestamp(OffsetDateTime lastMessageTimestamp) {
    
    this.lastMessageTimestamp = lastMessageTimestamp;
    return this;
  }

   /**
   * Last message timestamp
   * @return lastMessageTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last message timestamp")
  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastMessageTimestamp() {
    return lastMessageTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastMessageTimestamp(OffsetDateTime lastMessageTimestamp) {
    this.lastMessageTimestamp = lastMessageTimestamp;
  }


  public GetOneMailThreadResponse200AllOfData firstMessageTimestamp(OffsetDateTime firstMessageTimestamp) {
    
    this.firstMessageTimestamp = firstMessageTimestamp;
    return this;
  }

   /**
   * The time when the mail thread has had the first message received or created
   * @return firstMessageTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time when the mail thread has had the first message received or created")
  @JsonProperty(JSON_PROPERTY_FIRST_MESSAGE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFirstMessageTimestamp() {
    return firstMessageTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_MESSAGE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstMessageTimestamp(OffsetDateTime firstMessageTimestamp) {
    this.firstMessageTimestamp = firstMessageTimestamp;
  }


  public GetOneMailThreadResponse200AllOfData lastMessageSentTimestamp(OffsetDateTime lastMessageSentTimestamp) {
    this.lastMessageSentTimestamp = JsonNullable.<OffsetDateTime>of(lastMessageSentTimestamp);
    
    return this;
  }

   /**
   * The last time when the mail thread has had a message sent
   * @return lastMessageSentTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The last time when the mail thread has had a message sent")
  @JsonIgnore

  public OffsetDateTime getLastMessageSentTimestamp() {
        return lastMessageSentTimestamp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_SENT_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getLastMessageSentTimestamp_JsonNullable() {
    return lastMessageSentTimestamp;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_SENT_TIMESTAMP)
  public void setLastMessageSentTimestamp_JsonNullable(JsonNullable<OffsetDateTime> lastMessageSentTimestamp) {
    this.lastMessageSentTimestamp = lastMessageSentTimestamp;
  }

  public void setLastMessageSentTimestamp(OffsetDateTime lastMessageSentTimestamp) {
    this.lastMessageSentTimestamp = JsonNullable.<OffsetDateTime>of(lastMessageSentTimestamp);
  }


  public GetOneMailThreadResponse200AllOfData lastMessageReceivedTimestamp(OffsetDateTime lastMessageReceivedTimestamp) {
    
    this.lastMessageReceivedTimestamp = lastMessageReceivedTimestamp;
    return this;
  }

   /**
   * The last time when the mail thread has had a message received
   * @return lastMessageReceivedTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The last time when the mail thread has had a message received")
  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_RECEIVED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastMessageReceivedTimestamp() {
    return lastMessageReceivedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_RECEIVED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastMessageReceivedTimestamp(OffsetDateTime lastMessageReceivedTimestamp) {
    this.lastMessageReceivedTimestamp = lastMessageReceivedTimestamp;
  }


  public GetOneMailThreadResponse200AllOfData addTime(OffsetDateTime addTime) {
    
    this.addTime = addTime;
    return this;
  }

   /**
   * The time when the mail thread was inserted to database
   * @return addTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time when the mail thread was inserted to database")
  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getAddTime() {
    return addTime;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddTime(OffsetDateTime addTime) {
    this.addTime = addTime;
  }


  public GetOneMailThreadResponse200AllOfData updateTime(OffsetDateTime updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * The time when the mail thread was updated in database received
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time when the mail thread was updated in database received")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
  }


  public GetOneMailThreadResponse200AllOfData dealId(Integer dealId) {
    this.dealId = JsonNullable.<Integer>of(dealId);
    
    return this;
  }

   /**
   * The ID of the deal
   * @return dealId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the deal")
  @JsonIgnore

  public Integer getDealId() {
        return dealId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getDealId_JsonNullable() {
    return dealId;
  }
  
  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  public void setDealId_JsonNullable(JsonNullable<Integer> dealId) {
    this.dealId = dealId;
  }

  public void setDealId(Integer dealId) {
    this.dealId = JsonNullable.<Integer>of(dealId);
  }


  public GetOneMailThreadResponse200AllOfData dealStatus(String dealStatus) {
    this.dealStatus = JsonNullable.<String>of(dealStatus);
    
    return this;
  }

   /**
   * Status of the deal
   * @return dealStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status of the deal")
  @JsonIgnore

  public String getDealStatus() {
        return dealStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEAL_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDealStatus_JsonNullable() {
    return dealStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_DEAL_STATUS)
  public void setDealStatus_JsonNullable(JsonNullable<String> dealStatus) {
    this.dealStatus = dealStatus;
  }

  public void setDealStatus(String dealStatus) {
    this.dealStatus = JsonNullable.<String>of(dealStatus);
  }


  public GetOneMailThreadResponse200AllOfData leadId(UUID leadId) {
    this.leadId = JsonNullable.<UUID>of(leadId);
    
    return this;
  }

   /**
   * The ID of the lead
   * @return leadId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the lead")
  @JsonIgnore

  public UUID getLeadId() {
        return leadId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LEAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getLeadId_JsonNullable() {
    return leadId;
  }
  
  @JsonProperty(JSON_PROPERTY_LEAD_ID)
  public void setLeadId_JsonNullable(JsonNullable<UUID> leadId) {
    this.leadId = leadId;
  }

  public void setLeadId(UUID leadId) {
    this.leadId = JsonNullable.<UUID>of(leadId);
  }


  public GetOneMailThreadResponse200AllOfData allMessagesSentFlag(AllMessagesSentFlagEnum allMessagesSentFlag) {
    
    this.allMessagesSentFlag = allMessagesSentFlag;
    return this;
  }

   /**
   * Get allMessagesSentFlag
   * @return allMessagesSentFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ALL_MESSAGES_SENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AllMessagesSentFlagEnum getAllMessagesSentFlag() {
    return allMessagesSentFlag;
  }


  @JsonProperty(JSON_PROPERTY_ALL_MESSAGES_SENT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllMessagesSentFlag(AllMessagesSentFlagEnum allMessagesSentFlag) {
    this.allMessagesSentFlag = allMessagesSentFlag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOneMailThreadResponse200AllOfData getOneMailThreadResponse200AllOfData = (GetOneMailThreadResponse200AllOfData) o;
    return Objects.equals(this.id, getOneMailThreadResponse200AllOfData.id) &&
        Objects.equals(this.accountId, getOneMailThreadResponse200AllOfData.accountId) &&
        Objects.equals(this.userId, getOneMailThreadResponse200AllOfData.userId) &&
        Objects.equals(this.subject, getOneMailThreadResponse200AllOfData.subject) &&
        Objects.equals(this.snippet, getOneMailThreadResponse200AllOfData.snippet) &&
        Objects.equals(this.readFlag, getOneMailThreadResponse200AllOfData.readFlag) &&
        equalsNullable(this.mailTrackingStatus, getOneMailThreadResponse200AllOfData.mailTrackingStatus) &&
        Objects.equals(this.hasAttachmentsFlag, getOneMailThreadResponse200AllOfData.hasAttachmentsFlag) &&
        Objects.equals(this.hasInlineAttachmentsFlag, getOneMailThreadResponse200AllOfData.hasInlineAttachmentsFlag) &&
        Objects.equals(this.hasRealAttachmentsFlag, getOneMailThreadResponse200AllOfData.hasRealAttachmentsFlag) &&
        Objects.equals(this.deletedFlag, getOneMailThreadResponse200AllOfData.deletedFlag) &&
        Objects.equals(this.syncedFlag, getOneMailThreadResponse200AllOfData.syncedFlag) &&
        Objects.equals(this.smartBccFlag, getOneMailThreadResponse200AllOfData.smartBccFlag) &&
        Objects.equals(this.mailLinkTrackingEnabledFlag, getOneMailThreadResponse200AllOfData.mailLinkTrackingEnabledFlag) &&
        Objects.equals(this.parties, getOneMailThreadResponse200AllOfData.parties) &&
        Objects.equals(this.draftsParties, getOneMailThreadResponse200AllOfData.draftsParties) &&
        Objects.equals(this.folders, getOneMailThreadResponse200AllOfData.folders) &&
        Objects.equals(this.version, getOneMailThreadResponse200AllOfData.version) &&
        equalsNullable(this.snippetDraft, getOneMailThreadResponse200AllOfData.snippetDraft) &&
        Objects.equals(this.snippetSent, getOneMailThreadResponse200AllOfData.snippetSent) &&
        Objects.equals(this.messageCount, getOneMailThreadResponse200AllOfData.messageCount) &&
        Objects.equals(this.hasDraftFlag, getOneMailThreadResponse200AllOfData.hasDraftFlag) &&
        Objects.equals(this.hasSentFlag, getOneMailThreadResponse200AllOfData.hasSentFlag) &&
        Objects.equals(this.archivedFlag, getOneMailThreadResponse200AllOfData.archivedFlag) &&
        Objects.equals(this.sharedFlag, getOneMailThreadResponse200AllOfData.sharedFlag) &&
        Objects.equals(this.externalDeletedFlag, getOneMailThreadResponse200AllOfData.externalDeletedFlag) &&
        Objects.equals(this.firstMessageToMeFlag, getOneMailThreadResponse200AllOfData.firstMessageToMeFlag) &&
        Objects.equals(this.lastMessageTimestamp, getOneMailThreadResponse200AllOfData.lastMessageTimestamp) &&
        Objects.equals(this.firstMessageTimestamp, getOneMailThreadResponse200AllOfData.firstMessageTimestamp) &&
        equalsNullable(this.lastMessageSentTimestamp, getOneMailThreadResponse200AllOfData.lastMessageSentTimestamp) &&
        Objects.equals(this.lastMessageReceivedTimestamp, getOneMailThreadResponse200AllOfData.lastMessageReceivedTimestamp) &&
        Objects.equals(this.addTime, getOneMailThreadResponse200AllOfData.addTime) &&
        Objects.equals(this.updateTime, getOneMailThreadResponse200AllOfData.updateTime) &&
        equalsNullable(this.dealId, getOneMailThreadResponse200AllOfData.dealId) &&
        equalsNullable(this.dealStatus, getOneMailThreadResponse200AllOfData.dealStatus) &&
        equalsNullable(this.leadId, getOneMailThreadResponse200AllOfData.leadId) &&
        Objects.equals(this.allMessagesSentFlag, getOneMailThreadResponse200AllOfData.allMessagesSentFlag);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, accountId, userId, subject, snippet, readFlag, hashCodeNullable(mailTrackingStatus), hasAttachmentsFlag, hasInlineAttachmentsFlag, hasRealAttachmentsFlag, deletedFlag, syncedFlag, smartBccFlag, mailLinkTrackingEnabledFlag, parties, draftsParties, folders, version, hashCodeNullable(snippetDraft), snippetSent, messageCount, hasDraftFlag, hasSentFlag, archivedFlag, sharedFlag, externalDeletedFlag, firstMessageToMeFlag, lastMessageTimestamp, firstMessageTimestamp, hashCodeNullable(lastMessageSentTimestamp), lastMessageReceivedTimestamp, addTime, updateTime, hashCodeNullable(dealId), hashCodeNullable(dealStatus), hashCodeNullable(leadId), allMessagesSentFlag);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOneMailThreadResponse200AllOfData {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    snippet: ").append(toIndentedString(snippet)).append("\n");
    sb.append("    readFlag: ").append(toIndentedString(readFlag)).append("\n");
    sb.append("    mailTrackingStatus: ").append(toIndentedString(mailTrackingStatus)).append("\n");
    sb.append("    hasAttachmentsFlag: ").append(toIndentedString(hasAttachmentsFlag)).append("\n");
    sb.append("    hasInlineAttachmentsFlag: ").append(toIndentedString(hasInlineAttachmentsFlag)).append("\n");
    sb.append("    hasRealAttachmentsFlag: ").append(toIndentedString(hasRealAttachmentsFlag)).append("\n");
    sb.append("    deletedFlag: ").append(toIndentedString(deletedFlag)).append("\n");
    sb.append("    syncedFlag: ").append(toIndentedString(syncedFlag)).append("\n");
    sb.append("    smartBccFlag: ").append(toIndentedString(smartBccFlag)).append("\n");
    sb.append("    mailLinkTrackingEnabledFlag: ").append(toIndentedString(mailLinkTrackingEnabledFlag)).append("\n");
    sb.append("    parties: ").append(toIndentedString(parties)).append("\n");
    sb.append("    draftsParties: ").append(toIndentedString(draftsParties)).append("\n");
    sb.append("    folders: ").append(toIndentedString(folders)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    snippetDraft: ").append(toIndentedString(snippetDraft)).append("\n");
    sb.append("    snippetSent: ").append(toIndentedString(snippetSent)).append("\n");
    sb.append("    messageCount: ").append(toIndentedString(messageCount)).append("\n");
    sb.append("    hasDraftFlag: ").append(toIndentedString(hasDraftFlag)).append("\n");
    sb.append("    hasSentFlag: ").append(toIndentedString(hasSentFlag)).append("\n");
    sb.append("    archivedFlag: ").append(toIndentedString(archivedFlag)).append("\n");
    sb.append("    sharedFlag: ").append(toIndentedString(sharedFlag)).append("\n");
    sb.append("    externalDeletedFlag: ").append(toIndentedString(externalDeletedFlag)).append("\n");
    sb.append("    firstMessageToMeFlag: ").append(toIndentedString(firstMessageToMeFlag)).append("\n");
    sb.append("    lastMessageTimestamp: ").append(toIndentedString(lastMessageTimestamp)).append("\n");
    sb.append("    firstMessageTimestamp: ").append(toIndentedString(firstMessageTimestamp)).append("\n");
    sb.append("    lastMessageSentTimestamp: ").append(toIndentedString(lastMessageSentTimestamp)).append("\n");
    sb.append("    lastMessageReceivedTimestamp: ").append(toIndentedString(lastMessageReceivedTimestamp)).append("\n");
    sb.append("    addTime: ").append(toIndentedString(addTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    dealId: ").append(toIndentedString(dealId)).append("\n");
    sb.append("    dealStatus: ").append(toIndentedString(dealStatus)).append("\n");
    sb.append("    leadId: ").append(toIndentedString(leadId)).append("\n");
    sb.append("    allMessagesSentFlag: ").append(toIndentedString(allMessagesSentFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

