/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ReceiveMessageRequestAttachmentsInner
 */
@JsonPropertyOrder({
  ReceiveMessageRequestAttachmentsInner.JSON_PROPERTY_ID,
  ReceiveMessageRequestAttachmentsInner.JSON_PROPERTY_TYPE,
  ReceiveMessageRequestAttachmentsInner.JSON_PROPERTY_NAME,
  ReceiveMessageRequestAttachmentsInner.JSON_PROPERTY_SIZE,
  ReceiveMessageRequestAttachmentsInner.JSON_PROPERTY_URL,
  ReceiveMessageRequestAttachmentsInner.JSON_PROPERTY_PREVIEW_URL,
  ReceiveMessageRequestAttachmentsInner.JSON_PROPERTY_LINK_EXPIRES
})
@JsonTypeName("receiveMessage_request_attachments_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class ReceiveMessageRequestAttachmentsInner {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SIZE = "size";
  private BigDecimal size;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_PREVIEW_URL = "preview_url";
  private String previewUrl;

  public static final String JSON_PROPERTY_LINK_EXPIRES = "link_expires";
  private Boolean linkExpires = false;

  public ReceiveMessageRequestAttachmentsInner() {
  }

  public ReceiveMessageRequestAttachmentsInner id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the attachment
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID of the attachment")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public ReceiveMessageRequestAttachmentsInner type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The mime-type of the attachment
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The mime-type of the attachment")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public ReceiveMessageRequestAttachmentsInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the attachment
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the attachment")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ReceiveMessageRequestAttachmentsInner size(BigDecimal size) {
    
    this.size = size;
    return this;
  }

   /**
   * The size of the attachment
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The size of the attachment")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(BigDecimal size) {
    this.size = size;
  }


  public ReceiveMessageRequestAttachmentsInner url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * A URL to the file
   * @return url
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A URL to the file")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public ReceiveMessageRequestAttachmentsInner previewUrl(String previewUrl) {
    
    this.previewUrl = previewUrl;
    return this;
  }

   /**
   * A URL to a preview picture of the file
   * @return previewUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URL to a preview picture of the file")
  @JsonProperty(JSON_PROPERTY_PREVIEW_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreviewUrl() {
    return previewUrl;
  }


  @JsonProperty(JSON_PROPERTY_PREVIEW_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviewUrl(String previewUrl) {
    this.previewUrl = previewUrl;
  }


  public ReceiveMessageRequestAttachmentsInner linkExpires(Boolean linkExpires) {
    
    this.linkExpires = linkExpires;
    return this;
  }

   /**
   * If true, it will use the getMessageById endpoint for fetching updated attachment&#39;s urls. Find out more [here](https://pipedrive.readme.io/docs/implementing-messaging-app-extension)
   * @return linkExpires
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, it will use the getMessageById endpoint for fetching updated attachment's urls. Find out more [here](https://pipedrive.readme.io/docs/implementing-messaging-app-extension)")
  @JsonProperty(JSON_PROPERTY_LINK_EXPIRES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLinkExpires() {
    return linkExpires;
  }


  @JsonProperty(JSON_PROPERTY_LINK_EXPIRES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkExpires(Boolean linkExpires) {
    this.linkExpires = linkExpires;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReceiveMessageRequestAttachmentsInner receiveMessageRequestAttachmentsInner = (ReceiveMessageRequestAttachmentsInner) o;
    return Objects.equals(this.id, receiveMessageRequestAttachmentsInner.id) &&
        Objects.equals(this.type, receiveMessageRequestAttachmentsInner.type) &&
        Objects.equals(this.name, receiveMessageRequestAttachmentsInner.name) &&
        Objects.equals(this.size, receiveMessageRequestAttachmentsInner.size) &&
        Objects.equals(this.url, receiveMessageRequestAttachmentsInner.url) &&
        Objects.equals(this.previewUrl, receiveMessageRequestAttachmentsInner.previewUrl) &&
        Objects.equals(this.linkExpires, receiveMessageRequestAttachmentsInner.linkExpires);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, name, size, url, previewUrl, linkExpires);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReceiveMessageRequestAttachmentsInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    previewUrl: ").append(toIndentedString(previewUrl)).append("\n");
    sb.append("    linkExpires: ").append(toIndentedString(linkExpires)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

