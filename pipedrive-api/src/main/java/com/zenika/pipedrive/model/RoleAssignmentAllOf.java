/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RoleAssignmentAllOf
 */
@JsonPropertyOrder({
  RoleAssignmentAllOf.JSON_PROPERTY_USER_ID,
  RoleAssignmentAllOf.JSON_PROPERTY_ROLE_ID,
  RoleAssignmentAllOf.JSON_PROPERTY_ACTIVE_FLAG,
  RoleAssignmentAllOf.JSON_PROPERTY_TYPE
})
@JsonTypeName("roleAssignment_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class RoleAssignmentAllOf {
  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private Integer userId;

  public static final String JSON_PROPERTY_ROLE_ID = "role_id";
  private Integer roleId;

  public static final String JSON_PROPERTY_ACTIVE_FLAG = "active_flag";
  private Boolean activeFlag;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public RoleAssignmentAllOf() {
  }

  public RoleAssignmentAllOf userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The user ID
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user ID")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public RoleAssignmentAllOf roleId(Integer roleId) {
    
    this.roleId = roleId;
    return this;
  }

   /**
   * The role ID
   * @return roleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The role ID")
  @JsonProperty(JSON_PROPERTY_ROLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRoleId() {
    return roleId;
  }


  @JsonProperty(JSON_PROPERTY_ROLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoleId(Integer roleId) {
    this.roleId = roleId;
  }


  public RoleAssignmentAllOf activeFlag(Boolean activeFlag) {
    
    this.activeFlag = activeFlag;
    return this;
  }

   /**
   * Whether the role is active or not
   * @return activeFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the role is active or not")
  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActiveFlag() {
    return activeFlag;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveFlag(Boolean activeFlag) {
    this.activeFlag = activeFlag;
  }


  public RoleAssignmentAllOf type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The assignment type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The assignment type")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoleAssignmentAllOf roleAssignmentAllOf = (RoleAssignmentAllOf) o;
    return Objects.equals(this.userId, roleAssignmentAllOf.userId) &&
        Objects.equals(this.roleId, roleAssignmentAllOf.roleId) &&
        Objects.equals(this.activeFlag, roleAssignmentAllOf.activeFlag) &&
        Objects.equals(this.type, roleAssignmentAllOf.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, roleId, activeFlag, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoleAssignmentAllOf {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    roleId: ").append(toIndentedString(roleId)).append("\n");
    sb.append("    activeFlag: ").append(toIndentedString(activeFlag)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

