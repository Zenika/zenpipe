/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FieldsResponse200AllOfDataInner
 */
@JsonPropertyOrder({
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_ID,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_KEY,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_NAME,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_ORDER_NR,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_FIELD_TYPE,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_ADD_TIME,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_UPDATE_TIME,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_LAST_UPDATED_BY_USER_ID,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_ACTIVE_FLAG,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_EDIT_FLAG,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_INDEX_VISIBLE_FLAG,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_DETAILS_VISIBLE_FLAG,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_ADD_VISIBLE_FLAG,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_IMPORTANT_FLAG,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_BULK_EDIT_ALLOWED,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_SEARCHABLE_FLAG,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_FILTERING_ALLOWED,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_SORTABLE_FLAG,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_MANDATORY_FLAG,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_OPTIONS,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_OPTIONS_DELETED,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_IS_SUBFIELD,
  FieldsResponse200AllOfDataInner.JSON_PROPERTY_SUBFIELDS
})
@JsonTypeName("fieldsResponse200_allOf_data_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class FieldsResponse200AllOfDataInner {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ORDER_NR = "order_nr";
  private Integer orderNr;

  /**
   * The type of the field&lt;table&gt;&lt;tr&gt;&lt;th&gt;Value&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;address&#x60;&lt;/td&gt;&lt;td&gt;Address field (has multiple subfields, autocompleted by Google Maps)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;date&#x60;&lt;/td&gt;&lt;td&gt;Date (format YYYY-MM-DD)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;daterange&#x60;&lt;/td&gt;&lt;td&gt;Date-range field (has a start date and end date value, both YYYY-MM-DD)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;double&#x60;&lt;/td&gt;&lt;td&gt;Numeric value&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;enum&#x60;&lt;/td&gt;&lt;td&gt;Options field with a single possible chosen option&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;monetary&#x60;&lt;/td&gt;&lt;td&gt;Monetary field (has a numeric value and a currency value)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;org&#x60;&lt;/td&gt;&lt;td&gt;Organization field (contains an organization ID which is stored on the same account)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;people&#x60;&lt;/td&gt;&lt;td&gt;Person field (contains a person ID which is stored on the same account)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;phone&#x60;&lt;/td&gt;&lt;td&gt;Phone field (up to 255 numbers and/or characters)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;set&#x60;&lt;/td&gt;&lt;td&gt;Options field with a possibility of having multiple chosen options&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;text&#x60;&lt;/td&gt;&lt;td&gt;Long text (up to 65k characters)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;time&#x60;&lt;/td&gt;&lt;td&gt;Time field (format HH:MM:SS)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;timerange&#x60;&lt;/td&gt;&lt;td&gt;Time-range field (has a start time and end time value, both HH:MM:SS)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;user&#x60;&lt;/td&gt;&lt;td&gt;User field (contains a user ID of another Pipedrive user)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;varchar&#x60;&lt;/td&gt;&lt;td&gt;Text (up to 255 characters)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;varchar_auto&#x60;&lt;/td&gt;&lt;td&gt;Autocomplete text (up to 255 characters)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;visible_to&#x60;&lt;/td&gt;&lt;td&gt;System field that keeps item&#39;s visibility setting&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
   */
  public enum FieldTypeEnum {
    ADDRESS("address"),
    
    DATE("date"),
    
    DATERANGE("daterange"),
    
    DOUBLE("double"),
    
    ENUM("enum"),
    
    MONETARY("monetary"),
    
    ORG("org"),
    
    PEOPLE("people"),
    
    PHONE("phone"),
    
    SET("set"),
    
    TEXT("text"),
    
    TIME("time"),
    
    TIMERANGE("timerange"),
    
    USER("user"),
    
    VARCHAR("varchar"),
    
    VARCHAR_AUTO("varchar_auto"),
    
    VISIBLE_TO("visible_to");

    private String value;

    FieldTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FieldTypeEnum fromValue(String value) {
      for (FieldTypeEnum b : FieldTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FIELD_TYPE = "field_type";
  private FieldTypeEnum fieldType;

  public static final String JSON_PROPERTY_ADD_TIME = "add_time";
  private String addTime;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  private String updateTime;

  public static final String JSON_PROPERTY_LAST_UPDATED_BY_USER_ID = "last_updated_by_user_id";
  private Integer lastUpdatedByUserId;

  public static final String JSON_PROPERTY_ACTIVE_FLAG = "active_flag";
  private Boolean activeFlag;

  public static final String JSON_PROPERTY_EDIT_FLAG = "edit_flag";
  private Boolean editFlag;

  public static final String JSON_PROPERTY_INDEX_VISIBLE_FLAG = "index_visible_flag";
  private Boolean indexVisibleFlag;

  public static final String JSON_PROPERTY_DETAILS_VISIBLE_FLAG = "details_visible_flag";
  private Boolean detailsVisibleFlag;

  public static final String JSON_PROPERTY_ADD_VISIBLE_FLAG = "add_visible_flag";
  private Boolean addVisibleFlag;

  public static final String JSON_PROPERTY_IMPORTANT_FLAG = "important_flag";
  private Boolean importantFlag;

  public static final String JSON_PROPERTY_BULK_EDIT_ALLOWED = "bulk_edit_allowed";
  private Boolean bulkEditAllowed;

  public static final String JSON_PROPERTY_SEARCHABLE_FLAG = "searchable_flag";
  private Boolean searchableFlag;

  public static final String JSON_PROPERTY_FILTERING_ALLOWED = "filtering_allowed";
  private Boolean filteringAllowed;

  public static final String JSON_PROPERTY_SORTABLE_FLAG = "sortable_flag";
  private Boolean sortableFlag;

  public static final String JSON_PROPERTY_MANDATORY_FLAG = "mandatory_flag";
  private Boolean mandatoryFlag;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private JsonNullable<List<Object>> options = JsonNullable.<List<Object>>undefined();

  public static final String JSON_PROPERTY_OPTIONS_DELETED = "options_deleted";
  private List<Object> optionsDeleted = null;

  public static final String JSON_PROPERTY_IS_SUBFIELD = "is_subfield";
  private Boolean isSubfield;

  public static final String JSON_PROPERTY_SUBFIELDS = "subfields";
  private List<Object> subfields = null;

  public FieldsResponse200AllOfDataInner() {
  }

  public FieldsResponse200AllOfDataInner id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the field. Value is &#x60;null&#x60; in case of subfields.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the field. Value is `null` in case of subfields.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public FieldsResponse200AllOfDataInner key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * The key of the field. For custom fields this is generated upon creation.
   * @return key
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key of the field. For custom fields this is generated upon creation.")
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(String key) {
    this.key = key;
  }


  public FieldsResponse200AllOfDataInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the field
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the field")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public FieldsResponse200AllOfDataInner orderNr(Integer orderNr) {
    
    this.orderNr = orderNr;
    return this;
  }

   /**
   * The order number of the field
   * @return orderNr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order number of the field")
  @JsonProperty(JSON_PROPERTY_ORDER_NR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrderNr() {
    return orderNr;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_NR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderNr(Integer orderNr) {
    this.orderNr = orderNr;
  }


  public FieldsResponse200AllOfDataInner fieldType(FieldTypeEnum fieldType) {
    
    this.fieldType = fieldType;
    return this;
  }

   /**
   * The type of the field&lt;table&gt;&lt;tr&gt;&lt;th&gt;Value&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;address&#x60;&lt;/td&gt;&lt;td&gt;Address field (has multiple subfields, autocompleted by Google Maps)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;date&#x60;&lt;/td&gt;&lt;td&gt;Date (format YYYY-MM-DD)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;daterange&#x60;&lt;/td&gt;&lt;td&gt;Date-range field (has a start date and end date value, both YYYY-MM-DD)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;double&#x60;&lt;/td&gt;&lt;td&gt;Numeric value&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;enum&#x60;&lt;/td&gt;&lt;td&gt;Options field with a single possible chosen option&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;monetary&#x60;&lt;/td&gt;&lt;td&gt;Monetary field (has a numeric value and a currency value)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;org&#x60;&lt;/td&gt;&lt;td&gt;Organization field (contains an organization ID which is stored on the same account)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;people&#x60;&lt;/td&gt;&lt;td&gt;Person field (contains a person ID which is stored on the same account)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;phone&#x60;&lt;/td&gt;&lt;td&gt;Phone field (up to 255 numbers and/or characters)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;set&#x60;&lt;/td&gt;&lt;td&gt;Options field with a possibility of having multiple chosen options&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;text&#x60;&lt;/td&gt;&lt;td&gt;Long text (up to 65k characters)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;time&#x60;&lt;/td&gt;&lt;td&gt;Time field (format HH:MM:SS)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;timerange&#x60;&lt;/td&gt;&lt;td&gt;Time-range field (has a start time and end time value, both HH:MM:SS)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;user&#x60;&lt;/td&gt;&lt;td&gt;User field (contains a user ID of another Pipedrive user)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;varchar&#x60;&lt;/td&gt;&lt;td&gt;Text (up to 255 characters)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;varchar_auto&#x60;&lt;/td&gt;&lt;td&gt;Autocomplete text (up to 255 characters)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&#x60;visible_to&#x60;&lt;/td&gt;&lt;td&gt;System field that keeps item&#39;s visibility setting&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
   * @return fieldType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`address`</td><td>Address field (has multiple subfields, autocompleted by Google Maps)</td></tr><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td></tr><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value, both YYYY-MM-DD)</td></tr><tr><td>`double`</td><td>Numeric value</td></tr><tr><td>`enum`</td><td>Options field with a single possible chosen option</td></tr><tr></tr><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td></tr><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td></tr><tr><td>`people`</td><td>Person field (contains a person ID which is stored on the same account)</td></tr><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td></tr><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td></tr><tr><td>`text`</td><td>Long text (up to 65k characters)</td></tr><tr><td>`time`</td><td>Time field (format HH:MM:SS)</td></tr><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value, both HH:MM:SS)</td></tr><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td></tr><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td></tr><tr><td>`visible_to`</td><td>System field that keeps item's visibility setting</td></tr></table>")
  @JsonProperty(JSON_PROPERTY_FIELD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FieldTypeEnum getFieldType() {
    return fieldType;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldType(FieldTypeEnum fieldType) {
    this.fieldType = fieldType;
  }


  public FieldsResponse200AllOfDataInner addTime(String addTime) {
    
    this.addTime = addTime;
    return this;
  }

   /**
   * The creation time of the field
   * @return addTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The creation time of the field")
  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddTime() {
    return addTime;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddTime(String addTime) {
    this.addTime = addTime;
  }


  public FieldsResponse200AllOfDataInner updateTime(String updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * The update time of the field
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The update time of the field")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  public FieldsResponse200AllOfDataInner lastUpdatedByUserId(Integer lastUpdatedByUserId) {
    
    this.lastUpdatedByUserId = lastUpdatedByUserId;
    return this;
  }

   /**
   * The ID of the user who created or most recently updated the field, only applicable for custom fields
   * @return lastUpdatedByUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the user who created or most recently updated the field, only applicable for custom fields")
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_BY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLastUpdatedByUserId() {
    return lastUpdatedByUserId;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_BY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdatedByUserId(Integer lastUpdatedByUserId) {
    this.lastUpdatedByUserId = lastUpdatedByUserId;
  }


  public FieldsResponse200AllOfDataInner activeFlag(Boolean activeFlag) {
    
    this.activeFlag = activeFlag;
    return this;
  }

   /**
   * The active flag of the field
   * @return activeFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The active flag of the field")
  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActiveFlag() {
    return activeFlag;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveFlag(Boolean activeFlag) {
    this.activeFlag = activeFlag;
  }


  public FieldsResponse200AllOfDataInner editFlag(Boolean editFlag) {
    
    this.editFlag = editFlag;
    return this;
  }

   /**
   * The edit flag of the field
   * @return editFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The edit flag of the field")
  @JsonProperty(JSON_PROPERTY_EDIT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEditFlag() {
    return editFlag;
  }


  @JsonProperty(JSON_PROPERTY_EDIT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditFlag(Boolean editFlag) {
    this.editFlag = editFlag;
  }


  public FieldsResponse200AllOfDataInner indexVisibleFlag(Boolean indexVisibleFlag) {
    
    this.indexVisibleFlag = indexVisibleFlag;
    return this;
  }

   /**
   * Not used
   * @return indexVisibleFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not used")
  @JsonProperty(JSON_PROPERTY_INDEX_VISIBLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIndexVisibleFlag() {
    return indexVisibleFlag;
  }


  @JsonProperty(JSON_PROPERTY_INDEX_VISIBLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndexVisibleFlag(Boolean indexVisibleFlag) {
    this.indexVisibleFlag = indexVisibleFlag;
  }


  public FieldsResponse200AllOfDataInner detailsVisibleFlag(Boolean detailsVisibleFlag) {
    
    this.detailsVisibleFlag = detailsVisibleFlag;
    return this;
  }

   /**
   * Not used
   * @return detailsVisibleFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not used")
  @JsonProperty(JSON_PROPERTY_DETAILS_VISIBLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDetailsVisibleFlag() {
    return detailsVisibleFlag;
  }


  @JsonProperty(JSON_PROPERTY_DETAILS_VISIBLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetailsVisibleFlag(Boolean detailsVisibleFlag) {
    this.detailsVisibleFlag = detailsVisibleFlag;
  }


  public FieldsResponse200AllOfDataInner addVisibleFlag(Boolean addVisibleFlag) {
    
    this.addVisibleFlag = addVisibleFlag;
    return this;
  }

   /**
   * Not used
   * @return addVisibleFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not used")
  @JsonProperty(JSON_PROPERTY_ADD_VISIBLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAddVisibleFlag() {
    return addVisibleFlag;
  }


  @JsonProperty(JSON_PROPERTY_ADD_VISIBLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddVisibleFlag(Boolean addVisibleFlag) {
    this.addVisibleFlag = addVisibleFlag;
  }


  public FieldsResponse200AllOfDataInner importantFlag(Boolean importantFlag) {
    
    this.importantFlag = importantFlag;
    return this;
  }

   /**
   * Not used
   * @return importantFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not used")
  @JsonProperty(JSON_PROPERTY_IMPORTANT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getImportantFlag() {
    return importantFlag;
  }


  @JsonProperty(JSON_PROPERTY_IMPORTANT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImportantFlag(Boolean importantFlag) {
    this.importantFlag = importantFlag;
  }


  public FieldsResponse200AllOfDataInner bulkEditAllowed(Boolean bulkEditAllowed) {
    
    this.bulkEditAllowed = bulkEditAllowed;
    return this;
  }

   /**
   * Whether or not the field of an item can be edited in bulk
   * @return bulkEditAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the field of an item can be edited in bulk")
  @JsonProperty(JSON_PROPERTY_BULK_EDIT_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBulkEditAllowed() {
    return bulkEditAllowed;
  }


  @JsonProperty(JSON_PROPERTY_BULK_EDIT_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBulkEditAllowed(Boolean bulkEditAllowed) {
    this.bulkEditAllowed = bulkEditAllowed;
  }


  public FieldsResponse200AllOfDataInner searchableFlag(Boolean searchableFlag) {
    
    this.searchableFlag = searchableFlag;
    return this;
  }

   /**
   * Whether or not items can be searched by this field
   * @return searchableFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not items can be searched by this field")
  @JsonProperty(JSON_PROPERTY_SEARCHABLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSearchableFlag() {
    return searchableFlag;
  }


  @JsonProperty(JSON_PROPERTY_SEARCHABLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchableFlag(Boolean searchableFlag) {
    this.searchableFlag = searchableFlag;
  }


  public FieldsResponse200AllOfDataInner filteringAllowed(Boolean filteringAllowed) {
    
    this.filteringAllowed = filteringAllowed;
    return this;
  }

   /**
   * Whether or not items can be filtered by this field
   * @return filteringAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not items can be filtered by this field")
  @JsonProperty(JSON_PROPERTY_FILTERING_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFilteringAllowed() {
    return filteringAllowed;
  }


  @JsonProperty(JSON_PROPERTY_FILTERING_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilteringAllowed(Boolean filteringAllowed) {
    this.filteringAllowed = filteringAllowed;
  }


  public FieldsResponse200AllOfDataInner sortableFlag(Boolean sortableFlag) {
    
    this.sortableFlag = sortableFlag;
    return this;
  }

   /**
   * Whether or not items can be sorted by this field
   * @return sortableFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not items can be sorted by this field")
  @JsonProperty(JSON_PROPERTY_SORTABLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSortableFlag() {
    return sortableFlag;
  }


  @JsonProperty(JSON_PROPERTY_SORTABLE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSortableFlag(Boolean sortableFlag) {
    this.sortableFlag = sortableFlag;
  }


  public FieldsResponse200AllOfDataInner mandatoryFlag(Boolean mandatoryFlag) {
    
    this.mandatoryFlag = mandatoryFlag;
    return this;
  }

   /**
   * Whether or not the field is mandatory
   * @return mandatoryFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the field is mandatory")
  @JsonProperty(JSON_PROPERTY_MANDATORY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMandatoryFlag() {
    return mandatoryFlag;
  }


  @JsonProperty(JSON_PROPERTY_MANDATORY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMandatoryFlag(Boolean mandatoryFlag) {
    this.mandatoryFlag = mandatoryFlag;
  }


  public FieldsResponse200AllOfDataInner options(List<Object> options) {
    this.options = JsonNullable.<List<Object>>of(options);
    
    return this;
  }

  public FieldsResponse200AllOfDataInner addOptionsItem(Object optionsItem) {
    if (this.options == null || !this.options.isPresent()) {
      this.options = JsonNullable.<List<Object>>of(new ArrayList<>());
    }
    try {
      this.options.get().add(optionsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * The options of the field. When there are no options, &#x60;null&#x60; is returned.
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The options of the field. When there are no options, `null` is returned.")
  @JsonIgnore

  public List<Object> getOptions() {
        return options.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Object>> getOptions_JsonNullable() {
    return options;
  }
  
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  public void setOptions_JsonNullable(JsonNullable<List<Object>> options) {
    this.options = options;
  }

  public void setOptions(List<Object> options) {
    this.options = JsonNullable.<List<Object>>of(options);
  }


  public FieldsResponse200AllOfDataInner optionsDeleted(List<Object> optionsDeleted) {
    
    this.optionsDeleted = optionsDeleted;
    return this;
  }

  public FieldsResponse200AllOfDataInner addOptionsDeletedItem(Object optionsDeletedItem) {
    if (this.optionsDeleted == null) {
      this.optionsDeleted = new ArrayList<>();
    }
    this.optionsDeleted.add(optionsDeletedItem);
    return this;
  }

   /**
   * The deleted options of the field. Only present when there is at least 1 deleted option.
   * @return optionsDeleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The deleted options of the field. Only present when there is at least 1 deleted option.")
  @JsonProperty(JSON_PROPERTY_OPTIONS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getOptionsDeleted() {
    return optionsDeleted;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionsDeleted(List<Object> optionsDeleted) {
    this.optionsDeleted = optionsDeleted;
  }


  public FieldsResponse200AllOfDataInner isSubfield(Boolean isSubfield) {
    
    this.isSubfield = isSubfield;
    return this;
  }

   /**
   * Whether or not the field is a subfield of another field. Only present if field is subfield.
   * @return isSubfield
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not the field is a subfield of another field. Only present if field is subfield.")
  @JsonProperty(JSON_PROPERTY_IS_SUBFIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsSubfield() {
    return isSubfield;
  }


  @JsonProperty(JSON_PROPERTY_IS_SUBFIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsSubfield(Boolean isSubfield) {
    this.isSubfield = isSubfield;
  }


  public FieldsResponse200AllOfDataInner subfields(List<Object> subfields) {
    
    this.subfields = subfields;
    return this;
  }

  public FieldsResponse200AllOfDataInner addSubfieldsItem(Object subfieldsItem) {
    if (this.subfields == null) {
      this.subfields = new ArrayList<>();
    }
    this.subfields.add(subfieldsItem);
    return this;
  }

   /**
   * The subfields of the field. Only present when the field has subfields.
   * @return subfields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The subfields of the field. Only present when the field has subfields.")
  @JsonProperty(JSON_PROPERTY_SUBFIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getSubfields() {
    return subfields;
  }


  @JsonProperty(JSON_PROPERTY_SUBFIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubfields(List<Object> subfields) {
    this.subfields = subfields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldsResponse200AllOfDataInner fieldsResponse200AllOfDataInner = (FieldsResponse200AllOfDataInner) o;
    return Objects.equals(this.id, fieldsResponse200AllOfDataInner.id) &&
        Objects.equals(this.key, fieldsResponse200AllOfDataInner.key) &&
        Objects.equals(this.name, fieldsResponse200AllOfDataInner.name) &&
        Objects.equals(this.orderNr, fieldsResponse200AllOfDataInner.orderNr) &&
        Objects.equals(this.fieldType, fieldsResponse200AllOfDataInner.fieldType) &&
        Objects.equals(this.addTime, fieldsResponse200AllOfDataInner.addTime) &&
        Objects.equals(this.updateTime, fieldsResponse200AllOfDataInner.updateTime) &&
        Objects.equals(this.lastUpdatedByUserId, fieldsResponse200AllOfDataInner.lastUpdatedByUserId) &&
        Objects.equals(this.activeFlag, fieldsResponse200AllOfDataInner.activeFlag) &&
        Objects.equals(this.editFlag, fieldsResponse200AllOfDataInner.editFlag) &&
        Objects.equals(this.indexVisibleFlag, fieldsResponse200AllOfDataInner.indexVisibleFlag) &&
        Objects.equals(this.detailsVisibleFlag, fieldsResponse200AllOfDataInner.detailsVisibleFlag) &&
        Objects.equals(this.addVisibleFlag, fieldsResponse200AllOfDataInner.addVisibleFlag) &&
        Objects.equals(this.importantFlag, fieldsResponse200AllOfDataInner.importantFlag) &&
        Objects.equals(this.bulkEditAllowed, fieldsResponse200AllOfDataInner.bulkEditAllowed) &&
        Objects.equals(this.searchableFlag, fieldsResponse200AllOfDataInner.searchableFlag) &&
        Objects.equals(this.filteringAllowed, fieldsResponse200AllOfDataInner.filteringAllowed) &&
        Objects.equals(this.sortableFlag, fieldsResponse200AllOfDataInner.sortableFlag) &&
        Objects.equals(this.mandatoryFlag, fieldsResponse200AllOfDataInner.mandatoryFlag) &&
        equalsNullable(this.options, fieldsResponse200AllOfDataInner.options) &&
        Objects.equals(this.optionsDeleted, fieldsResponse200AllOfDataInner.optionsDeleted) &&
        Objects.equals(this.isSubfield, fieldsResponse200AllOfDataInner.isSubfield) &&
        Objects.equals(this.subfields, fieldsResponse200AllOfDataInner.subfields);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, key, name, orderNr, fieldType, addTime, updateTime, lastUpdatedByUserId, activeFlag, editFlag, indexVisibleFlag, detailsVisibleFlag, addVisibleFlag, importantFlag, bulkEditAllowed, searchableFlag, filteringAllowed, sortableFlag, mandatoryFlag, hashCodeNullable(options), optionsDeleted, isSubfield, subfields);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldsResponse200AllOfDataInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    orderNr: ").append(toIndentedString(orderNr)).append("\n");
    sb.append("    fieldType: ").append(toIndentedString(fieldType)).append("\n");
    sb.append("    addTime: ").append(toIndentedString(addTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    lastUpdatedByUserId: ").append(toIndentedString(lastUpdatedByUserId)).append("\n");
    sb.append("    activeFlag: ").append(toIndentedString(activeFlag)).append("\n");
    sb.append("    editFlag: ").append(toIndentedString(editFlag)).append("\n");
    sb.append("    indexVisibleFlag: ").append(toIndentedString(indexVisibleFlag)).append("\n");
    sb.append("    detailsVisibleFlag: ").append(toIndentedString(detailsVisibleFlag)).append("\n");
    sb.append("    addVisibleFlag: ").append(toIndentedString(addVisibleFlag)).append("\n");
    sb.append("    importantFlag: ").append(toIndentedString(importantFlag)).append("\n");
    sb.append("    bulkEditAllowed: ").append(toIndentedString(bulkEditAllowed)).append("\n");
    sb.append("    searchableFlag: ").append(toIndentedString(searchableFlag)).append("\n");
    sb.append("    filteringAllowed: ").append(toIndentedString(filteringAllowed)).append("\n");
    sb.append("    sortableFlag: ").append(toIndentedString(sortableFlag)).append("\n");
    sb.append("    mandatoryFlag: ").append(toIndentedString(mandatoryFlag)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    optionsDeleted: ").append(toIndentedString(optionsDeleted)).append("\n");
    sb.append("    isSubfield: ").append(toIndentedString(isSubfield)).append("\n");
    sb.append("    subfields: ").append(toIndentedString(subfields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

