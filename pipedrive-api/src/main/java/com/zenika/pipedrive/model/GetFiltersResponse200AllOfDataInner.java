/*
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zenika.pipedrive.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The filter object
 */
@ApiModel(description = "The filter object")
@JsonPropertyOrder({
  GetFiltersResponse200AllOfDataInner.JSON_PROPERTY_ID,
  GetFiltersResponse200AllOfDataInner.JSON_PROPERTY_NAME,
  GetFiltersResponse200AllOfDataInner.JSON_PROPERTY_ACTIVE_FLAG,
  GetFiltersResponse200AllOfDataInner.JSON_PROPERTY_TYPE,
  GetFiltersResponse200AllOfDataInner.JSON_PROPERTY_USER_ID,
  GetFiltersResponse200AllOfDataInner.JSON_PROPERTY_ADD_TIME,
  GetFiltersResponse200AllOfDataInner.JSON_PROPERTY_UPDATE_TIME,
  GetFiltersResponse200AllOfDataInner.JSON_PROPERTY_VISIBLE_TO,
  GetFiltersResponse200AllOfDataInner.JSON_PROPERTY_CUSTOM_VIEW_ID
})
@JsonTypeName("getFiltersResponse200_allOf_data_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-24T19:04:25.918485+01:00[Europe/Paris]")
public class GetFiltersResponse200AllOfDataInner {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ACTIVE_FLAG = "active_flag";
  private Boolean activeFlag;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private Integer userId;

  public static final String JSON_PROPERTY_ADD_TIME = "add_time";
  private String addTime;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  private String updateTime;

  public static final String JSON_PROPERTY_VISIBLE_TO = "visible_to";
  private Integer visibleTo;

  public static final String JSON_PROPERTY_CUSTOM_VIEW_ID = "custom_view_id";
  private Integer customViewId;

  public GetFiltersResponse200AllOfDataInner() {
  }

  public GetFiltersResponse200AllOfDataInner id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the filter
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the filter")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public GetFiltersResponse200AllOfDataInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the filter
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the filter")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public GetFiltersResponse200AllOfDataInner activeFlag(Boolean activeFlag) {
    
    this.activeFlag = activeFlag;
    return this;
  }

   /**
   * The active flag of the filter
   * @return activeFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The active flag of the filter")
  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActiveFlag() {
    return activeFlag;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveFlag(Boolean activeFlag) {
    this.activeFlag = activeFlag;
  }


  public GetFiltersResponse200AllOfDataInner type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of the item
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the item")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public GetFiltersResponse200AllOfDataInner userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The owner of the filter
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The owner of the filter")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public GetFiltersResponse200AllOfDataInner addTime(String addTime) {
    
    this.addTime = addTime;
    return this;
  }

   /**
   * The date and time when the filter was added
   * @return addTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time when the filter was added")
  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddTime() {
    return addTime;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddTime(String addTime) {
    this.addTime = addTime;
  }


  public GetFiltersResponse200AllOfDataInner updateTime(String updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * The date and time when the filter was updated
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time when the filter was updated")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  public GetFiltersResponse200AllOfDataInner visibleTo(Integer visibleTo) {
    
    this.visibleTo = visibleTo;
    return this;
  }

   /**
   * The visibility group ID of who can see then filter
   * @return visibleTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The visibility group ID of who can see then filter")
  @JsonProperty(JSON_PROPERTY_VISIBLE_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVisibleTo() {
    return visibleTo;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleTo(Integer visibleTo) {
    this.visibleTo = visibleTo;
  }


  public GetFiltersResponse200AllOfDataInner customViewId(Integer customViewId) {
    
    this.customViewId = customViewId;
    return this;
  }

   /**
   * Used by Pipedrive webapp
   * @return customViewId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Used by Pipedrive webapp")
  @JsonProperty(JSON_PROPERTY_CUSTOM_VIEW_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCustomViewId() {
    return customViewId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_VIEW_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomViewId(Integer customViewId) {
    this.customViewId = customViewId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetFiltersResponse200AllOfDataInner getFiltersResponse200AllOfDataInner = (GetFiltersResponse200AllOfDataInner) o;
    return Objects.equals(this.id, getFiltersResponse200AllOfDataInner.id) &&
        Objects.equals(this.name, getFiltersResponse200AllOfDataInner.name) &&
        Objects.equals(this.activeFlag, getFiltersResponse200AllOfDataInner.activeFlag) &&
        Objects.equals(this.type, getFiltersResponse200AllOfDataInner.type) &&
        Objects.equals(this.userId, getFiltersResponse200AllOfDataInner.userId) &&
        Objects.equals(this.addTime, getFiltersResponse200AllOfDataInner.addTime) &&
        Objects.equals(this.updateTime, getFiltersResponse200AllOfDataInner.updateTime) &&
        Objects.equals(this.visibleTo, getFiltersResponse200AllOfDataInner.visibleTo) &&
        Objects.equals(this.customViewId, getFiltersResponse200AllOfDataInner.customViewId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, activeFlag, type, userId, addTime, updateTime, visibleTo, customViewId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetFiltersResponse200AllOfDataInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    activeFlag: ").append(toIndentedString(activeFlag)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    addTime: ").append(toIndentedString(addTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    visibleTo: ").append(toIndentedString(visibleTo)).append("\n");
    sb.append("    customViewId: ").append(toIndentedString(customViewId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

